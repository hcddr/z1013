PN SYS_2.029
;
;***************************************
;
;TASTATURABFRAGE FUER K 7659 + Z 1013 
;
; TEIL 2 VERSION 2.029
;
;     23.11.88
;
;Copyrights by Rainer Brosig, COSWIG 
;W.-Florin-Str. 2c , 8270 
;
;***************************************
;
;
MOFL:	EQU	27H	;MODEFLAGS
			;BIT 0 : LANGE REPEATVERZ.DUCHLAUFEN
			;    1 : STRINGAUSGABE
			;    2 : GRAFIKMODE ON
			;    3 : HARDCOPY ON
			;    4 : SM-TASTENBELEGUNG ON
			;    5 : TASTATURPEEP ON
			;    6 : SLOW (STEUERUNG DURCH TASTE D53)
			;    7 : TASTE BETAETIGT
LATCH:	EQU	8H	;SPALTENLATCH A 47
PIOBD:	EQU	2H	;SYSTEM-PIO ZEILENINPUT
THTP:	EQU	39H	;ZEITK.TASTENPEEP
ZKPOS:	EQU	3H	;ZEITK.POSITIV-ENTPRELLUNG
ZKNEG:	EQU	4H	;ZEIK.NEGATIV-ENTPRELLUNG
ZPZ:	EQU	4H	;ZEICHENPUFFERZELLE
POLL:	EQU	0F13AH	;INKEY BLIND
TAPOI:	EQU	3BH	;TAST.-TAB.-POINTER
PO$TA:	EQU	3DH	;POINTER STRINGTAB.ANF.
NEXT$:	EQU	3FH	;POINTER N. ZEICHEN
LFTB:	EQU	41H	;LAENGE F-TASTEN-POS.TABGZ.
FTPOI:	EQU	43H	;F-TASTEN-POS.TAB.POINTER
FTAPO:	EQU	45H	;F-TASTEN-ADRESS-TAB.-POINTER
AZZ:	EQU	35H	;AKTUELLER ZEILENZAEHLER
APZ:	EQU	AZZ+1	;AKT. POSITONSZAEHLER
ASZ:	EQU	AZZ+2	;AKT. SEITENZAEHLER
IOSYS:	EQU	4	;IO-SYSTEM-ZUSTANDSREGISTER-ADR.
;
;********************************************
;
	ORG	0F800H
;
;TASTATURABFRAGE
;
TAST:	LD	A,0FH
	OUT	LATCH
	LD	HL,MOFL
	BIT	1,M	;STRINGMODE?
	JPNZ	AUSG$
	LD	B,0
	BIT	6,M
	JRZ	MINIT-#	;OHNE VERZOEG.
VZ:	EX	(SP),IX	;ZEITDEHNUNG 10 ms
	EX	(SP),IX
	DJNZ	VZ-#
MINIT:	IN	PIOBD
	CPL
	AND	0FH	;MASKE
	JRNZ	MSTA1-#
	RES	0,M	;RUECKSETZEN REPEATKENNZEICHEN
	RES	7,M	;KEINE BETAETIGUNG
	LD	(ZPZ),A
	OUT	LATCH
	RET
MSTA1:	LD	A,(ZPZ)
	OR	A
	JRZ	MP1-#
	BIT	0,M	;=1 WENN VORHER REPEAT
	JRZ	MR0-#
;
;KLEINE REPEATVERZ.
;
	LD	B,18	;REPEATFREQU.
	PUSH	AF
	IN	IOSYS
	BIT	6,A
	JRZ	MKV3-#
	LD	B,35
MKV3:	POP	AF
MKV1:	LD	C,0
MKV2:	DEC	C
	JRNZ	MKV2-#
	DJNZ	MKV1-#
	JR	MP1-#
;
;GROSSE REPEATVERZ.+NEGATIV ENTPRELLUNG
;
MR0:	LD	B,40H	;REPEAT-ANSPRECHZEIT 2 MHz
	PUSH	AF
	IN	IOSYS
	BIT	6,A
	JRZ	MR7-#	;2 MHz
	LD	B,70H
MR7:	POP	AF
MR1:	LD	C,0
MR2:	IN	PIOBD
	CPL
	AND	0FH
	JRZ	MR3-#
	DEC	C 
	JRNZ	MR2-#
	DJNZ	MR1-#
	SET	0,M
	JR	MP1-#
MR3:	LD	B,ZKNEG	;NEGATIV ENTPRELLZEIT B*5ms
MR4:	LD	C,0
MR5:	IN	PIOBD
	CPL
	AND	0FH
	JRNZ	MR0-#
	DEC	C
	JRNZ	MR5-#
	DJNZ	MR4-#
;
;TASTENPOLLING
;
MP1:	BIT	7,M	;ENTPRELLUNG?
	JRNZ	MP0-#
	LD	B,ZKPOS	;POS-ENTPRELLZEIT B*5ms
ENTPR:	LD	C,0
ZS1:	IN	PIOBD
	CPL
	AND	0FH
	RZ
	DEC	C
	JRNZ	ZS1-#
	DJNZ	ENTPR-#
MP0:	XOR	A
MP5:	CMP	7
	JRNZ	MP2-#
	ADD	1
MP2:	OUT	LATCH
	LD	D,A 
MP3:	IN	PIOBD
	CPL
	AND	0FH
	JRNZ	MP4-#
	LD	A,D
	ADD	1H
	CMP	12
	JRNZ	MP5-#
	RES	0,M
FZUE:	XOR	A
	RET
;
;ERMITTLUNG TASTENPOSITION
;
MP4:	LD	BC,708H
	OUT	B	;SPALTE 7 AKT.
	SLA	D
	SLA	D
	SLA	D	;MULT.SPALTE MIT 8
	SUB	1
	ADD	D
	LD	E,A	;E=TASTENPOSITION 0-95
;
;
;AUSWERTUNG SHIFT
;
	LD	(ZPZ),A
	IN	PIOBD
	AND	0FH
	XOR	8
	LD	A,E
	JRNZ	FKTZU-#
	ADD	60H
	LD	E,A
;
;FUNKTIONSZUORDNUNG
;
FKTZU:	LD	HL,(FTPOI)	;FUNKTIONSTASTENTAB.-POINTER
	LD	BC,(LFTB)	;LAENGE TABELLE
	CPIR		;SUCHEN TAST.POS.
	JRNZ	MP21-#
	DEC	HL
	LD	BC,(FTPOI)
	SBC	HL,BC	;HL:=GEF.POS.REL.
	SLA	L	;*2
	LD	BC,(FTAPO)	;F-TASTEN-ADRESS-TB
	ADD	HL,BC
	LD	C,M
	INC	HL
	LD	H,M
	LD	L,C
	LD	BC,MOFL	;MODEFLAGS
	LD	A,(BC)
	RES	0,A	;LOESCHEN LANGE REPEAT
	BIT	7,A
	JPNZ	FZUE
	SET	7,A
	LD	(BC),A
	JMP	M
;
J100:	LD	SP,0B0H
	JMP	100H
J200:	LD	SP,0B0H
	JMP	200H
J300:	LD	SP,0B0H
	JMP	300H
GRF:	LD	L,4
	JR	AUSF-#
HC:	LD	L,8
	JR	AUSF-#
SF:	LD	L,40H
	JR	AUSF-#
BEEP:	LD	L,20H
	JR	AUSF-#
SLOCK:	LD	L,10H
AUSF:	LD	A,(BC)	;MODEFLAGS
	XOR	L	;NEG.
	LD	(BC),A
AUSF1:	XOR	A
	LD	E,A
	JMP	SETFF
MON:	CALL	ZMINI
	RST	38H
T2M:	IN	IOSYS
	RES	6,A
	JR	SYSMO-#
T4M:	IN	IOSYS
	SET	6,A
	JR	SYSMO-#
BF:	IN	IOSYS
	XOR	80H
	JR	SYSMO-#
ZGU:	IN	IOSYS
	XOR	20H
SYSMO:	OUT	IOSYS
	JR	AUSF1-#

;
;ZEICHEN AUS TABELLE
;
MP21:	LD	HL,(TAPOI)
	LD	D,0
	ADD	HL,DE	;BERECHNUNG DER TABELLENPOSITION 
	LD	A,M	;HOLEN ZEICHEN AUS TABELLE 
	LD	E,A
;
;CONTROL FUNKTION
;
	IN	PIOBD
	BIT	3,A	;ABFRAGE CTRL-TASTE
	JRNZ	F$-#
	LD	A,E
	AND	9FH 
	LD	E,A
	IN	PIOBD
	AND	0FH
	JRNZ	F$-#
	LD	A,80H
	ADD	E
	LD	E,A
;
;STRING FUNKTION
;
F$:	BIT	7,E
	JRZ	MNULL-#
	LD	(ZPZ),A
	LD	HL,(PO$TA)
F$1:	LD	A,M
	OR	A
	JRZ	MNULL-#
	INC	HL
	CMP	E
	JRNZ	F$1-#
	LD	(NEXT$),HL
AUSG$:	LD	HL,(NEXT$)	;NAECHSTES STR.ZEICHEN
	LD	A,M
	INC	HL
	LD	(NEXT$),HL
	LD	HL,MOFL
	SET	1,M
	BIT	7,A
	JRNZ	AUSGE-#
	OR	A
	RNZ
AUSGE:	RES	1,M
	XOR	A
	RET
;
;GRAFIK-MODE?
;
MNULL:	LD	HL,MOFL
	LD	A,E
	BIT	2,M	;GRAFIKMODE?
	JRZ	MSM1-#
	CMP	8
	JRZ	MSM1-#
	CMP	9
	JRZ	MSM1-#	;CL+CR KEIN GRFK.Z.
	ADD	80H
	LD	E,A
;
;CAPS-TASTATURUMSCHALTUNG
;
MSM1:	BIT	4,M 
	JRZ	MTE-#	;KEINE UMSCHALTUNG WENN BIT 4=0
	LD	A,E
	CMP	41H	;C-FLAG GESETZT FUER A<41H
	JRC	MTE-#
;
;KONVERTIERUNG GROSS <-> KLEIN
;
MT5:	CMP	5EH	;C-FLAG GESETZT FUER A<5BH
	JRNC	MT6-#
	ADD	20H 
	LD	E,A
	JR	MTE-#
MT6:	CMP	61H	;C-FLAG GESETZT FUER A<61H (a)
	JRC	MTE-#
	CMP	7EH	;C-FLAG GESETZT FUER A<7BH
	JRNC	MTE-#
	SUB	20H
	LD	E,A
;
;TASTATURBEEPIMPULS
;
MTE:	LD	A,E
	LD	(ZPZ),A	;LETZTES ZEICHEN =(0004)
	SET	7,M
	BIT	5,M	;PEEP ON?
	JRZ	MLED1-#
	LD	BC,1039H	;ZK
PEEP:	PUSH	BC
MPE3:	PUSH	BC
	LD	A,C	;TONH.=0->PAUSE
	OR	A
	LD	A,0FH
	JRZ	MPE4-#
	LD	A,0EH
MPE4:	OUT	LATCH
	POP	BC	;C=f, B=t
	PUSH	BC
MPE1:	DEC	C	;NEGATIVE HALBWELLE
	JRNZ	MPE1-#
	LD	A,0FH 
	OUT	LATCH
	POP	BC
	PUSH	BC
MPE2:	DEC	C	;POSITIVE HALBWELLE
	JRNZ	MPE2-#
	POP	BC
	DJNZ	MPE3-#
	POP	BC
;
;NEUSETZEN FLIP-FLOP's
;
SETFF:	PUSH	HL
	LD	HL,MOFL
	LD	A,0EH	;LED-FLIP-FLOP
	OUT	LATCH	;NEU SETZEN 
	BIT	3,M
	JRZ	MGR-#
	LD	A,0CH 
	OUT	LATCH
MGR:	BIT	4,M 
	POP	HL
	JRZ	MLED1-# 
	LD	A,0DH 
	OUT	LATCH
MLED1:	LD	A,7H
	OUT	LATCH
	LD	A,E
	OR	A
	RET 
;
;FUNKTIONSTASTEN-POS.TABELLE
;
FTAB:	DB	52H	;GRAFIK ON/OFF
	DB	35H	;SHIFT-LOCK
	DB	54H	;SLOW/FAST
	DB	55H	;BEEP ON/OFF
	DB	47H	;2 MHz
	DB	48H	;4 MHz
	DB	49H	;32*32/16*64
	DB	4AH	;ZG
	DB	43H	;MON-RET/RST 38H
	DB	0A7H	;JMP 100H
	DB	0A8H	;JMP 200H
	DB	0A9H	;JMP 300H
	DB	53H	;HARDCOPY ON/OFF
	DB	0AAH	;SCREEN COPY
;
;FUNKTIONSTASTEN-ADRESSTABELLE
;
FATAB:	DA	GRF
	DA	SLOCK
	DA	SF
	DA	BEEP
	DA	T2M
	DA	T4M
	DA	BF
	DA	ZGU
	DA	MON
	DA	J100
	DA	J200
	DA	J300 
	DA	HC
	DA	BSDR
	

;
;TASTENBELEGUNGSTABELLE
;ERSTE SHIFTEBENE
;
TAB:	DB	31H	;E0/1
	DB	51H	;D1/Q
	DB	41H	;C1/A
	DB	59H	;B1/Y
	DB	32H	;E2/2
	DB	57H	;D2/W
	DB	53H	;C2/S
	DB	58H	;B2/X
	DB	33H	;E3/3
	DB	45H	;D3/E
	DB	44H	;C3/D
	DB	43H	;B3/C
	DB	34H	;E4/4
	DB	52H	;D4/R
	DB	46H	;C4/F
	DB	56H	;B4/V
	DB	35H	;E5/5
	DB	54H	;D5/T
	DB	47H	;C5/G
	DB	42H	;B5/B
	DB	36H	;E6/6
	DB	5AH	;D6/Z
	DB	48H	;C6/H
	DB	4EH	;A6/N
	DB	37H	;E7/7
	DB	55H	;D7/U
	DB	4AH	;C7/J
	DB	4DH	;B7/M
	DB	38H	;E8/8
	DB	49H	;D8/I
	DB	4BH	;C8/K
	DB	2CH	;B8/,
	DB	39H	;E9/9
	DB	4FH	;D9/O
	DB	4CH	;C9/L
	DB	2EH	;B9/.
	DB	30H	;E10/0
	DB	50H	;D10/P
	DB	5CH	;C10/OE
	DB	2DH	;B10/-
	DB	7EH	;E11/SZ
	DB	5DH	;D11/UE
	DB	5BH	;C11/AE
	DB	3CH	;E12/<
	DB	2BH	;D12/+
	DB	23H	;C12/DOPPELKREUZ
	DB	5EH	;E00/CTRL-ZEICHEN
	DB	40H	;B0/KOMMERZIELLES A
	DB	3EH	;E13/>
	DB	0DH	;B13/ENTER/CTRL-M
	DB	0BH	;A1/CURSOR RUNTER /CTRL-K
	DB	8H	;A10/CURSOR LINKS /CTRL-H
	DB	20H	;A5/LEERTASTE
	DB	0	;D0/SM-TAST. ON/OFF
	DB	0AH	;A0/CURSOR HOCH /CTRL-J
	DB	9H	;A11/CURSOR RECHTS
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0	;B99,B11/SHIFT
	DB	0	;C0/CTRL-TASTE
	DB	0
	DB	7FH	;D13/ROTES C /DEL
	DB	14H	;E14/ROTES L /CTRL-T
	DB	0	;F01/MONITORRUECKKEHR
	DB	1BH	;F02/ESCAPE
	DB	7BH	;F03/GESCHW.KLAMMER AUF
	DB	7DH	;F04/     -"-       ZU
	DB	0	;F06/JMP 100H
	DB	0	;F07/JMP 200H
	DB	0	;F08/JMP 300H
	DB	0	;F09/CALL BS-DRUCK
	DB	15H	;F10/CTRL-U/RUN-BASIC
	DB	19H	;F11/CTRL-Y
	DB	12H	;F12/CTRL-R/INSERT-BASIC/WANDL.GR-KL-EDIT
	DB	10H	;F13/CTRL-P/DELETE-BASIC
	DB	3H	;F14/BREAKTASTE /CTRL-C
	DB	6H	;F05/CTRL-F/TAB-EDITOR
	DB	0
	DB	0	;F53/GRAFIK ON/OFF
	DB	0	;E53/HARDCOPY-FLAG SETZEN
	DB	0	;D53/RESERVE(BIT6(27H)1/0)
	DB	0	;C53/PEEP ON/OFF 
	DB	0
	DB	1CH	;E95/CTRL-Ö/SCHWARZ-ROT-EDITOR
	DB	1DH	;F95/CTRL-Ü/ROT-SCHWARZ-EDITOR
	DB	0
	DB	0
	DB	0
	DB	5H	;D,C95/WIPPE + /CTRL-E/CR LINKSANSCHLAG-EDITOR 
	DB	0
	DB	1H	;B95/WIPPE - /CTRL-A/CR RECHTSANSCHLAG-EDITOR
	DB	0
;
;ZWEITE SHIFTEBENE
;
TAB2:	DB	21H	;E1/!
	DB	71H	;D1/q
	DB	61H	;C1/a
	DB	79H	;B1/y
	DB	22H	;E2/"
	DB	77H	;D2/w
	DB	73H	;C2/s
	DB	78H	;B2/x
	DB	40H	;E3/@
	DB	65H	;D3/e
	DB	64H	;C3/d
	DB	63H	;B3/c
	DB	24H	;E4/DOLLAR
	DB	72H	;D4/r
	DB	66H	;C4/f
	DB	76H	;B4/v
	DB	25H	;E5/%
	DB	74H	;D5/t
	DB	67H	;C5/g
	DB	62H	;B5/b
	DB	26H	;E6/&
	DB	7AH	;D6/z
	DB	68H	;C6/h
	DB	6EH	;B6/n
	DB	2FH	;E7//
	DB	75H	;D7/u
	DB	6AH	;C7/j
	DB	6DH	;B7/m
	DB	28H	;E8/(
	DB	69H	;D8/i
	DB	6BH	;C8/k
	DB	3BH	;B8/;
	DB	29H	;E9/)
	DB	6FH	;D9/o
	DB	6CH	;C9/l
	DB	3AH	;B9/:
	DB	3DH	;E10/=
	DB	70H	;D10/p
	DB	7CH	;C10/oe
	DB	5FH	;B10/_
	DB	3FH	;E11/?
	DB	7DH	;D11/ü
	DB	7BH	;C11/ä
	DB	5BH	;E12/ECK.KLAMMER AUF
	DB	2AH	;D12/*
	DB	27H	;C12/'
	DB	7CH	;E0/SENKR.STRICH
	DB	5CH	;B0/NEG.SCHRAEGSTRICH
	DB	5DH	;E13/ECK.KLAMMER ZU
	DB	0DH	;C,B13/ENTER/CR
	DB	05H	;A01/C.HOCH CPM
	DB	13H	;A10/C.LINKS CPM
	DB	20H	;A05/LEERTASTE
	DB	0	;D00/SM-TAST. ON/OFF
	DB	18H	;A00/C.RUNTER CPM
	DB	04H	;A11/C.RECHTS CPM
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0	;B99/B11/SHIFT
	DB	0	;C00/CTRL-TASTE
	DB	0
	DB	7H	;D13/ROTES C/CTRL-G
	DB	13H	;E14/ROTES L/CTRL-S
	DB	0	;F01/MON.RUECK.
	DB	1BH	;F02/ESCAPE 
	DB	60H	;F03/NEG.ANSTRICH 
	DB	7EH	;F04
	DB	0	;F06/JMP 100H
	DB	0	;F07/JMP 200H
	DB	0	;F08/JMP 300H
	DB	0	;F09/BS-DRUCK
	DB	0FH	;F10/CTRL-O
	DB	18H	;F11/CTRL-X/CURS.ZEILENENDE-BASIC
	DB	11H	;F12/CTRL-Q
	DB	1FH	;F13
	DB	3H	;F14/BREAKTASTE /CTRL-C
	DB	1EH	;F05/NL(SIF1000)
	DB	0
	DB	0	;F53/GRAFIK ON/OFF
	DB	0	;E53/HARDCOPY-FLAG SETZEN
	DB	0	;D53/SLOW-FLAG-SETZEN (BIT 6)
	DB	0	;C53/PEEP ON/OFF
	DB	0
	DB	1CH	;E95/SCHW.-ROT
	DB	1DH	;F95/ROT-SCHW.
	DB	0
	DB	0
	DB	0
	DB	19H	;D,C95/WIPPE +/CTRL-Y
	DB	0
	DB	18H	;B95/WIPPE - /CTRL-X
	DB	0
;
;UP-STATUSABFRAGE
;
STAT:	LD	A,0FH 
	OUT	LATCH
	IN	PIOBD
	CPL
	AND	0FH
	OUT	LATCH
	LD	A,0FFH
	RNZ
	INC	A
	LD	(ZPZ),A
	RET
;
;**********************************************************
;
;      SAVE-LOAD-ROUTINE MIT KOPF, BLOCKNUMMERN 
;      UND VERIFY-FUNKTION  6.0 RB
;            Z 1013 
;
;      Copyrights by Rainer Brosig 05.87
;      W.-Florin-Str.2c, COSWIG, 8270
;
;**********************************************************
;
TYPP:	EQU	PUANF-4H	;TYPKENNZEICHENZELLE PUFFER
ARG1:	EQU	1BH		;PARAMETER 1 
ARG2:	EQU	1DH		;PARAMETER 2 
CURSR:	EQU	2BH		;AKTUELLE CURSORPOSITION
ARG3:	EQU	23H		;PARAMETER 3
ARG1P:	EQU	PUANF-10H	;ARG1 PUFFER
ARG2P:	EQU	PUANF-0EH	;ARG2 PUFFER
ARG3P:	EQU	PUANF-0CH	;STARTADRESSE IM PUFFER
SOIL:	EQU	16H		;ANF.ADR.EINGABEZEILE
PUANF:	EQU	0F0H		;PUFFERANFANG NAME
MONTB:	EQU	0B0H		;ANF.Z-MON-TAB RAM
DATA:	EQU	13H		;KOPFADR. DES LETZTEN BLOCKS
ZILAD:	EQU	25H		;KOPFADR. VORLETZTER BL.
KZALT:	EQU	0BH		;KZ OHNE KOPFADR.
BS:	EQU	0F383H		;BLOCK SCHREIBEN
BSX:	EQU	0F386H		;-""- SYNC-BIT->DE
WS:	EQU	0F3D0H		;WORT SCHEIBEN
FLOUT:	EQU	0F3F1H		;FLANKENAUSGABE
WL:	EQU	0F49DH		;WORT LESEN
BITIN:	EQU	0F4BCH		;BITEINGABE
FIFLA:	EQU	0F4C6H		;FINDEN FLANKE
BSMK:	EQU	0F389H		;SCHREIBEN BLOCK MIT KOPF
;
;SAVE Aufruf durch Anwenderprogramme mit CALL SARUF
;
;Parameteruebergabe:
;
;A=3AH --> Wiederholen der SAVE-Funktion mit gleichem Kopf
;Zelle 1BH : Anfangsadresse
;      1DH : Endadresse
;      23H : Startadresse
;H(IY)=TYPKENNZ., wenn =0 --> Abfrage Typ
;
;SCHREIBEN EINES BLOCKS: RUF MIT CALL BLSK (0F398H),(0FFC4H)
; DE=ANZAHL SYNC-BITS
; HL=DMA
; IX=BLOCKKOPFINHALT (z.B DMA)
;
;LOAD Aufruf durch Anwenderprogramme mit CALL LORUF
;
;Parameterübergabe:
;                                 A  H(IY) L(IY) 
;
;mit Signifikanz ohne Sperre      4EH   0     20H
;ohne   -"-       "    -"-         0    0     20H
;ohne Kopfkennzeichenkontrolle    41H   0     20H
;mit Signifikanz mit Sperre       4EH   0    /20H 
;ohne   -"-       "    -"-         0    0    /20H 
;ohne Kopfkennzeichenkontrolle    41H   0    /20H 
;und gesetzter Sperre
;soll der Typ vorgegeben werden, ist H(IY) mit dem Typ zu
;uebergeben,--> keine Typabfrage
;(1BH,1CH) <-- Übergabe neue Ladeadresse, 
;sonst mit 0 initialisieren
;Kopfaufbau: Bit  0 - 1  Anfangsadr.
;	          2 - 3  Endadr.
;		  4 - 5  Startadr.
;		  6 -0BH frei für Zusatzinformationen
;		   0CH   Typkennzeichen
;		  0DH-0FH 3x0D3H = Kopfkennzeichen
;		 10H-1FH 16 Byte Namensblock
;
;
;***********************************
;	SAVE MIT NAME
;***********************************
;
SAVE:	LD	HY,0	;LOESCHEN TYP-KZ
SARU1:	CMP	3AH	;WIEDGRHOLEN MIT GLEICHEN
	CANZ	KAUFB	;PARAMETERN BEI A=':'
	RST	20H
	DB	2,8DH
	CALL	L1
	LDIR
	LD	HL,PUANF-10H
	CALL	BSA	;KOPFAUSGABE
	LD	HL,(ARG1P)
	CALL	PRTHL	;AUSGABE MEMORYPOINTER
	CALL	BSA	;SCHREIBEN ANFANGSBLOCK
	CALL	DS1	;SPEICHERAUSG.BIS ARG2
	CALL	VERIF
	RET
;
BSA:	LD	DE,1000H	;LÄNGE VORTON
	JMP	BSX
;
;***********************************
;UP - KOPFAUFBEREITUNG IM PUFFER
;***********************************
;
KAUFB:	CALL	L1
	EX	DE,HL
	LDIR	;FÜLLEN PUFFER ARG1 U. 2
	LD	HL,(ARG3)
	LD	(ARG3P),HL	;ARG3
	LD	HL,PUANF-3H
	LD	A,0D3H	;KOPFKENNZEICHEN -> PUFFER
	LD	B,3
KOKZ:	LD	M,A
	INC	HL
	DJNZ	KOKZ-#	;3*D3H=KZ-NAMEN
	CALL	L3	;EING.TYP U.NAME
	LD	A,HY
	LD	(TYPP),A
	LD	HL,(SOIL)
	LD	BC,10H
	LD	DE,PUANF
	LDIR	;LADEN PUFFER MIT NAME
	RST	20H
	DB	2,8DH
	RET
;
;AUSGABE SPEICHERBEREICH
;
DS1:	EX	DE,HL
	LD	HL,(ARG2P)	;ENDADRESSE
	AND	A
	SBC	HL,DE
	EX	DE,HL
	RC  
	LD	(ZILAD),HL
	CALL	BS
	CALL	PRTHL
	IN	IOSYS
	BIT	6,A	;SLOW?
	JRNZ	DS1-#	;JA
	CALL	0F130H
	CMP	03H	;BREAK
	RZ
	JR	DS1-#
;
;UP - VERIFY 
;
VERIF:	RST	20H
	DB	2,'verify? (Y)',0BAH
	RST	20H
	DB	1H
	CMP	59H	;'Y'
	RNZ
	RST	20H
	DB	2H,' rewind ',0BCH
	RST	20H
	DB	1H
	RST	20H
	DB	2H,0DH,8DH
SUCH1:	CALL	TAST
	CMP	3
	JPZ	38H
	CALL	BLBS
	JRNZ	SUCH1-#
	LD	A,PUANF-10H
	CMP	E
	JRNZ	SUCH1-#
	XOR	A
	CMP	D
	JRNZ	SUCH1-#
VERGL:	CALL	BLBS
	CANZ	BADRC
	PUSH	AF
	LD	BC,39H
	CANZ	PEEP
	POP	AF
	RNZ 
	LD	H,D
	LD	L,E
	CALL	PRTHL
	LD	A,(ZILAD)
	CMP	E
	JRNZ	VERGL-#
	LD	A,(ZILAD+1)
	CMP	D
	JRNZ	VERGL-#
	CALL	CURIN
	RET
;
;SCHREIBEN BLOCK AUF BS
;
BLBS:	LD	A,0FFH
	LD	(ARG2+1),A
	LD	HL,0EC00H
	CALL	BL
	RET
;
;***********************************
;	LOAD MIT NAME
;***********************************
;
LOAD:	LD	HL,(SOIL)
	INC	HL
	INC	HL
	INC	HL	;POINTER 3.ZEICHEN
	LD	A,M
	LD	LY,A	;LD L(IY),A (KZ-SPERRE)
	DEC	HL
	LD	HY,0	;LD H(IY),A (KEIN TYP)
	LD	A,M	;A=2.BUCHST.
LORU1:	LD	HL,DATA+2
	LD	M,0	;LÖSCHEN ZEICHENZÄHLER
	LD	HL,KZALT
	LD	M,0	;KZ VOREINSTELLEN
	CMP	4EH	;EINSPRUNG ANWENDERPROGR.
	PUSH	HL
	CAZ	L3	;LADEN NAME+TYP
	POP	HL
	LD	HL,(ARG1)
	LD	(ARG3),HL	;RETTEN NEUE ADR.
	EXAF
;
;SUCHEN NACH KOPFBLOCK
;
LOAD3:	CALL	0F130H	;ABRUCH DURCH BREAK
	CMP	3
	JRNZ	KBRAK-#
	RST	20H
	DB	2,8DH
	RET
KBRAK:	LD	A,PUANF+15
	LD	(ARG2),A
	LD	HL,PUANF-10H
	CALL	BL	;LADEN KOPFBLOCK
	EXAF
	CMP	41H
	JRZ	ALT-#
	EXAF
	JRNZ	LOAD3-#
	LD	D,A
	OR	E
	LD	(KZALT),A
	LD	B,3H
	LD	HL,PUANF-3
KOKO:	LD	A,M
	CMP	0D3H	;KONTROLLE KOPFBLOCK
	INC	HL
	JRNZ	LOAD3-#
	DJNZ	KOKO-#
;
ALT:	RST	20H
	DB	2,8DH
	LD	B,3H
	LD	HL,(ARG1P)
	LD	(ZILAD),HL
	LD	HL,ARG1P+1
DRARG:	RST	20H	;DRUCKEN DER 3 ARGUMENTE
	DB	0CH	;OTHLS
	INC	HL
	INC	HL
	INC	HL
	INC	HL
	DJNZ	DRARG-#
	RST	20H
	DB	2,0DH,8DH
	LD	HL,PUANF-4
	LD	DE,(CURSR)
	LD	BC,14H
	LDIR	;DRUCKEN DES NAMENSBLOCKS
	INC	DE	;SPACE NACH NAME
	LD	(CURSR),DE
LSTOP:	LD	A,HY	;LD A,H(IY)
	CMP	21H	;TEST AUF TYPKONTROLLE
	JRC	LOAD5-#	;KEINE TYPKONTROLLE 
	LD	HL,TYPP
	CMP	M
	CANZ	ERROR
	JRNZ	LOAD3-#	;TYP NICHT OK
LOAD5:	LD	A,(DATA+2)
	LD	B,A
	OR	A	;TEST AUF NAMENSSIGNIF.
	JRZ	LOAD6-#
	LD	HL,PUANF
	LD	DE,(SOIL)
LOAD7:	LD	A,(DE)
	CMP	M	;NAMENSKONTROLLE
	INC	HL
	INC	DE
	CANZ	ERROR
	JPNZ	LOAD3
	DJNZ	LOAD7-#
LOAD6:	LD	HL,(ARG3)
	XOR	A
	OR	H	;TEST AUF >0FFH
	JRZ	CL1-#	;BEI <100H KEINE NEUE AADR.
	LD	BC,(ARG1P)
	LD	(ARG1P),HL
	RST	20H
	DB	7H	;OUTHL
	RST	20H
	DB	0EH	;OUTSP
	SBC	HL,BC
	LD	BC,(ARG2P)
	ADD	HL,BC
	LD	(ARG2P),HL
RST	20H
	DB	7H	;OUTHL
;
;EINLESEN FILE
; 
CL1:	RST	20H
	DB	2,0DH,8DH
	CALL	L1
	LDIR	 ;ÜBERNEHMEN DER PARAMETER
	LD	HL,(ARG1P) 
DLMO:	LD	A,(MOFL)
	BIT	6,A	;SLOW-BIT
	JRNZ	DLMO1-#
	CALL	0F130H	;INKEY
	CMP	3
	RZ  
DLMO1:	CALL	PRTHL
	LD	A,(KZALT)
	OR	A
	PUSH	AF
	CAZ	BLALT
	POP	AF
	CANZ	BLMK
	EX	DE,HL
	LD	HL,(ARG2P)
	AND	A
	SBC	HL,DE
	EX	DE,HL
	JRNC	DLMO-#
	LD	HL,(ARG2P)
	CALL	PRTHL
	CALL	CURIN
;
;AUTOSTART?
;
	LD	HL,(ARG3P)
	LD	A,(TYPP)
	CMP	43H	;KONTROLLE C-FILE
	RNZ
	LD	A,LY	
	CMP	20H	;KONTROLLE SPERRE
	RNZ
	JMP	M	;AUTOSTART
;
;**************************************
;UP - LESEN EINES BLOCKS MIT KONTROLLE
;INPUT: (ZILAD) - ZU LESENDER BLOCK
;         HL    - DMA
;OUTPUT: (ZILAD)- NAECHSTER ZU LESENDE BLOCK
;**************************************
;
BLMK:	CALL	BL
	JRZ	DLM3-#
;
;BLOCKSUCHEN
;
BADR:	CALL	BADRC
	LD	BC,39H
	CALL	PEEP
INCHR:	RST	20H
	DB	1
	CMP	03H
	JRZ	BLMR-#
	RST	20H
	DB	2,0DH,8DH
SUCHB:	LD	BC,20H
	AND	A
	SBC	HL,BC
WIED:	CALL	BL
	JRNZ	SUCHB-#
	LD	A,D
	AND	E
	INC	A
	JRZ	BLMR-#	;ENDEBLOCK
DLM3:	PUSH	HL
	EX	DE,HL
	AND	A
	LD	DE,(ZILAD)
	SBC	HL,DE
	POP	HL
	JRZ	DLM1-#	;WAR GESUCHTER BLOCK
	JRC	SUCHB-#
	CALL	RECER
	CALL	ERROR
	LD	BC,40H
	CALL	PEEP
	JR	INCHR-#
DLM1:	PUSH	HL
	LD	HL,20H
	ADD	HL,DE
	LD	(ZILAD),HL
BLMR:	POP	HL
	RET
;
;**************************************
;UP - LESEN ALTE BLÖCKE
;**************************************
;
BLALT:	CALL	BL
	RZ  
	LD	LY,A	;SPERRE SETZEN
	CALL	BADRC
	RET
;
;++++++++++++++++++++++++++++++++++ 
;ARGUMENTE LADEN
;
L1:	LD	HL,ARG1P
	LD	DE,ARG1
	LD	BC,4H
	RET
;
;++++++++++++++++++++++++++++++++++ 
;TYP + NAME LADEN
;
L3:	DB	0FDH
	LD	A,H	;TYPVORGABE?
	OR	A
	JRNZ	KTYP-#
	RST	20H
	DB	2H,0DH,'typ',0BAH
	RST	20H
	DB	1H	;INCHAR
	CMP	20H	;<20H=KZ KEINE TYPENKONTR.
	JRNC	L31-#
	LD	A,20H
L31:	RST	20H
	DB	0	;OUTCHAR
	LD	HY,A	;SPACE=KZ FUER OHNE TYP
KTYP:	RST	20H
	DB	2H,' filename',0BAH
	LD	HL,(CURSR)
	LD	(SOIL),HL
	LD	C,0FFH
ZKINP:	INC	C
	RST	20H
	DB	1
	CMP	3
	JPZ	LRET
	CMP	8
	JRNZ	OUTCH-#
	DEC	C
	JPM	ZKINP
ENDE:	DEC	C
OUTCH:	RST	20H
	DB	0
	CMP	0DH
	LD	A,C
	LD	(DATA+2),A
	RZ  
	LD	A,10H	;16 ZEICHEN
	CMP	C
	LD	A,8
	JRNZ	ZKINP-#
	JR	ENDE-#
;
;++++++++++++++++++++++++++++++++++
;FEHLERMELDUNGEN
;++++++++++++++++++++++++++++++++++
;
BADRC:	CALL	CURIN
	RST	20H
	DB	2,'bad',0A0H
RECER:	RST	20H
	DB	2,'record',0A0H
	RET
ERROR:	RST	20H
	DB	2,'not found',8DH
	RET
;
;************************************
;AUSGABE HL AUF GLEICHER POSITION
;************************************
;
PRTHL:	PUSH	DE
	PUSH	HL
	LD	DE,(CURSR)
	RST	20H
	DB	7	;OUTHL
	LD	HL,(CURSR)
	LD	M,20H
	LD	(CURSR),DE
LRET:	POP	HL
	POP	DE
	RET
;
;************************************
;CURSOR-ADRESSE + 5
;************************************
;
CURIN:	PUSH HL
	PUSH	BC
	LD	HL,(CURSR)
	LD	BC,5
	ADD	HL,BC
	LD	(CURSR),HL
	POP	BC
	POP	HL
	RET
;
;************************************
;UP ZUR EINGABE EINES DATENBLOCKS
;INPUT:HL=AADR.
;OUTPUT:HL=AADR.NAECHSTER BLOCK
;	DE=(DATA)=KOPFADRESSE
;	Z=1 --> BLOCK FEHLERFREI
;************************************
;
BL:	CALL	BITIN
	CALL	FIFLA
	LD	C,7
BLM1:	LD	DE,910H	;BLN9...BLN11
	LD	A,7
SW1:	DEC	A
	JRNZ	SW1-#
	CALL	BITIN
BLMX:	CALL	BITIN
	JRNZ	BL-#	;VERAENDERUNG ERKANNT?
	DEC	D
	JRNZ	BLMX-#
	DEC	C
	JRZ	BLM4-#	;SYNC.-FELD ERKANNT?
BLM2:	IN	2
	XOR	B
	BIT	6,A
	JRNZ	BLM1-#	;FLANKE ERKANNT?
	DEC	E
	JRNZ	BLM2-#	;WARTESCHLEIFE
	JR	BL-#	;TIME OUT
;
;7 NULLEN ERKANNT
;
BLM4:	CALL	FIFLA
	LD	A,68
SW3:	DEC	A
	JRNZ	SW3-#
	CALL	BITIN
	JRNZ	BLM4-#	;AUF 1 WARTEN
	CALL	FIFLA
	LD	A,30	;BLN4...
SW4:	DEC	A
	JRNZ	SW4-#
	CALL	WL
	LD	(DATA),DE
	PUSH	DE
	POP	IX	;CS-ANFANGSWERT
	LD	A,26	;BLN 10...
	LD	C,16
SW10:	DEC	A
	JRNZ	SW10-#
BLM5:	CALL	WL
	ADD	IX,DE
	PUSH	BC
	LD	C,L
	LD	B,H
	LD	HL,(ARG2)	;ENDADRESSE
	XOR	A
	SBC	HL,BC
	LD	L,C
	LD	H,B
	POP	BC
	JRC	BLM6-#
	LD	M,E
	INC	HL
	LD	M,D
	JR	BLM7-#
BLM6:	LD	A,1	;BLN5...
SW5:	DEC	A
	JRNZ	SW5-#
	INC	HL
BLM7:	INC	HL
	DEC	C
	JRZ	BLM8-#
	LD	A,18	;BLN6...
SW6:	DEC	A
	JRNZ	SW6-#
	JR	BLM5-#
BLM8:	LD	A,18	;BLN7
SW7:	DEC	A
	JRNZ	SW7-#
	CALL	WL	;PRUEFSUMME LESEN
	EX	DE,HL
	PUSH	IX
	POP	BC
	XOR	A
	SBC	HL,BC
	EX	DE,HL
	LD	DE,(DATA)
	RET
;
;SUCHEN EINES KOPFBLOCKS
;INHALT STEHT IM PUFFER (E0H)
;
SUCHK:	PUSH	HL
	PUSH	DE
	PUSH	BC
SKBL1:	RST	20H
	DB	4
	CMP	3
	JRZ	SKBLE-#
	LD	A,PUANF+15
	LD	(ARG2),A
	LD	HL,PUANF-10H
	CALL	BL
	JRNZ	SKBL1-#
	LD	B,3
	LD	HL,PUANF-3
SKBL2:	LD	A,M
	CMP	0D3H
	INC	HL
	JRNZ	SKBL1-#
	DJNZ	SKBL2-#
SKBLE:	POP	BC
	POP	DE
	POP	HL
	RET
;
;AUFBEREITUNG KOPFPUFFER
;
AKP:	PUSH	HL
	PUSH	DE
	PUSH	BC
	CALL	KAUFB
	POP	BC
	POP	DE
	POP	HL
	RET
;
;
;***************************************
;DRUCKERRESET
;***************************************
;
DRDEL:	PUSH	HL
	LD	HL,AZZ	;AKT. ZEILENZAEHLER
	LD	M,0
	INC	HL	;AKT. POSIT.ZAELER
	LD	M,0
	INC	HL	;AKT. SEITENZ.
	LD	M,0
	POP	HL
	RET
;
;***************************************
;BILDSCHIRMDRUCK
;***************************************
;
BSDR:	PUSH	DE
	PUSH	HL
	LD	HL,0EC00H	;BS-ANFANG
	LD	DE,0	;ZEILE+ZPOS=0
	LD	A,0DH
	CALL	DRAKS	;CR VOR BEGINN
ZCH:	LD	A,M
	CMP	0FFH	;CURSOR=ENDE
	JRZ	MA-#
	CALL	DRAKS
	INC	HL
	INC	E
	LD	A,E
	CMP	32
	JRNZ	ZCH-#
	LD	E,0
	LD	A,0DH
	CALL	DRAKS
	LD	A,0AH
	CALL	DRAKS
	INC	D
	LD	A,D
	CMP	32
	JRNZ	ZCH-#
MA:	POP	HL
	POP	DE	
	XOR	A
	RET
;
;*****************************************
;AUSGABE EINER PERIODE AUF JOYBOX UND TB
;INP: C - PERIODENDAUER n*33mks+20mks
;*****************************************
;
SOUND:	PUSH	BC
	LD	A,80H	;POS HALBWELLE
	OUT	0	;JOYBOX
	OUT	2	;TB-BUCHSE
	LD	B,C
SOUN1:	BIT	0,(IX+0)	;ZEITDEHNUNG
	DJNZ	SOUN1-#
	XOR	A	;NEG.HALBWELLE
	LD	B,C
	OUT	0
	OUT	2
SOUN2:	BIT	0,(IX+0)
	DJNZ	SOUN2-#
	POP	BC
	RET
;
;**********************************
;ABFRAGE JOYSTICK
;RET: B - LINKS
;     C - RECHTS
;     Z - KEINE BETAETIGUNG
;     CY- NICHT ANGESCHL.
;**********************************
;
GETST:	LD	A,0CFH	;BIT-BETR.
	LD	C,1FH
	OUT	1	;STW PIOA
	LD	A,C	;5+6+7 AUSG.
	OUT	1
	LD	A,20H	;LINKS
	OUT	0	;DAT PIOA
	IN	0
	AND	C
	SCF
	RZ
	CPL
	AND	C
	LD	B,A
	LD	A,40H	;RECHTS
	OUT	0
	IN	0
	CPL
	AND	C
	LD	C,A
	OR	B
	RET
;
;***********************************
;ZUS.-MON.-INITIALISIERUNG
;***********************************
;
ZMINI:	LD	HL,MONTB
	LD	BC,30H-LINIT
	LD	A,'L'
	CPIR
	JRNZ	ZINI1-#
	DEC	HL
	LD	DE,INITB
	LD	B,LINIT
ZINI3:	LD	A,(DE)
	CMP	M
	INC	HL
	INC	DE
	JRNZ	ZINI1-#
	DJNZ	ZINI3-#
	RET
ZINI1:	LD	HL,0DFH-LINIT
	LD	DE,0DFH
	LD	BC,30H-LINIT
	LDDR
	LD	HL,INITB	;ADR.BELEGUNGSTABELL
	LD	DE,MONTB	;ADR. ZUS.-MON-TABELLE --> B0H
	LD	BC,LINIT	;LAENGE TABELLE
	LDIR 
	RET
;
INITB:	DB	'L'
	DA	LOAD 
	DB	'S'
	DA	SAVE
	DB	'D'
	DA	DDELS
	DB	'I'
	DA	DRINS
LINIT:	EQU	#-INITB
;
;
;*************************************
;STANDARDSTRINGS
;*************************************
;
SFELD:	DB	81H
	DB	'(c)RB'
	DB	' 2.209 13.11.88',0DH
	DB	86H	;S
	DB	'@S:'
	DB	8AH	;@
	DB	'@LN',0DH,'X',0DH
 	DB	8CH	;L
	DB	14H,'LD',14H
	DB	95H	;U
	DB	14H,'PUSH',14H
	DB	8FH	;O
	DB	14H,'POP',14H
	DB	84H
	DB	14H,'DB',14H
	DB	85H
	DB	'EDIT'
	DB	90H
	DB	'PRINT'
	DB	97H
	DB	'WINDOW'
END$F:	DB	0	;ENDE $FELD
;
;
DRINI:	EQU	0E800H
DRZEL:	EQU	DRINI+3
DRAKK:	EQU	DRZEL+3
ZEIDR:	EQU	DRAKK+3
TEXT:	EQU	ZEIDR+3
HARDC:	EQU	TEXT+3
;
	ORG	STAB-73
;
DUMMY:	RET
SVTLA:	JMP	SOUND
	JMP	GETST
	JMP	AKP
	JMP	SUCHK
	JMP	BSMK
	JMP	BLMK
	JMP	ZEIDR
DRINS:	JMP	DRINI
	JMP	DUMMY
	JMP	DUMMY
	JMP	DUMMY
	JMP	DUMMY
	JMP	PEEP
	JMP	DRZEL
	JMP	HARDC
	JMP	BSDR
DRAKS:	JMP	DRAKK
DDELS:	JMP	DRDEL
	JMP	ZMINI
	JMP	LORU1
	JMP	SARU1
	JMP	STAT
	JMP	POLL	;INKEY BLIND
	JMP	TAST	;INKEY NORMAL
STAB:	ORG	0FFFFH
	END

