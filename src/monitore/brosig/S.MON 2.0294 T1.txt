	PN M2
;*******************************
;
; MONITOR DES Z1013 geaendert
;     V.2.02/9
;       TEIL 1
; (c) Rainer Brosig
; IG-HC am IZ der TU-Dresden
;
;         23.11.88
;
;*******************************
;
; VEREINBARUNGEN
;
TAST:	EQU	0F800H
RST0:	EQU	0
BFC:	EQU	3
MLZ:	EQU	4	;MERKE LETZTES ZEICHEN VON?
;
CALL5:	EQU	5	;CALL FREI
;
RST8:	EQU	8	;FREI
ABRK:	EQU	0BH	;ADRESSE BREAK
OPSEQ:	EQU	0DH	;OPERANDENSEQUENZ BEIBREAK
;
RST10:	EQU	10H	;FREI
DATA:	EQU	13H	;3 BYTE DATA BEI INHEX
SOIL:	EQU	16H	;START OF INPUTLINE
;
RST18:	EQU	18H	;FREI
ARG1:	EQU	1BH	;ARGUMENT 1
ARG2:	EQU	1DH	;ARGUMENT 2
CZSP:	EQU	1FH	;CODE ZWISCHENSPEICHERFUER ????
;
RST20:	EQU	20H	;ZENTRALER ANSPRUNG FUER ????
ARG3:	EQU	23H	;ARGUMENT 3
ZILAD:	EQU	25H	;ZWEITE INLINE ADRESSE
ISOGR:	EQU	27H	;ASCII-GRAFIK
;
RST28:	EQU	28H	;FREI
CURSR:	EQU	2BH	;CURSOR
CSP:	EQU	2DH	;CURSOR ZWISCHENSPEICHER
MZ1:	EQU	2FH	;MERKE PHASENLAGE
;
RST30:	EQU	30H	;FREI
SYNCL:	EQU	33H	;SYNCHRONISATIONSLUECKE
TACO:	EQU	35H	;TASTENCODETABELLE
;
RST38:	EQU	38H	;BEI RST 38 JMP ZU AWHAT
BSTAB:	EQU	TACO+18	;ROLLDISTANZ IM OUTCH
BSUAN:	EQU	BSTAB+2	;BS UNTEN ANFANG
BSOGR:	EQU	BSUAN+2	;BS OBEN GROESSER
RHLEX:	EQU	BSOGR+2
RDEEX:	EQU	RHLEX+2
RBCEX:	EQU	RDEEX+2
RAFEX:	EQU	RBCEX+2
RHLM:	EQU	RAFEX+2
RDEM:	EQU	RHLM+2
RBCM:	EQU	RDEM+2
RAFM:	EQU	RBCM+2
RIY:	EQU	RAFM+2
RIX:	EQU	RIY+2
RPC:	EQU	RIX+2
RSP:	EQU	RPC+2
NMI:	EQU	66H	;FREI FUER NMI
ZSFEI:	EQU	69H	;ZWISCHENSPEICHER FUER EI
SSP:	EQU	ZSFEI+1	;SYSTEMSTACK-ZWISCHENSPEICHER
LAENG:	EQU	SSP+2	;
;
USTCK:	EQU	90H	;USER-STACK
STACK:	EQU	0B0H	;SYSTEMSTACK
CUSB:	EQU	0B0H	;CASSETTEN-UEBERSPIELBEREICH
;
;
;**************************************************
;ROM-BEREICH
;
	ORG	0F000H
;
START:	JR	STAR1-#
INIT:	LD	HL,RHLEX
	LD	DE,RHLEX+1
	LD	M,0
	LD	BC,21
	LDIR
STAR1:	LD	SP,STACK
	NOP
	CALL	NMIIN
RSEI:	LD	A,0C3H
	LD	(RST20),A
	LD	HL,RS20E
	LD	(RST20+1),HL
PIOIN:	LD	A,0CFH	;PORT B  BITBETRIEB
	OUT	3
	LD	A,07FH
	OUT	3
TABUM:	LD	HL,FUTAB
	LD	DE,43H
	LD	BC,0AH
	LDIR
	RST	20H
	DB	2
	DB	0CH	;CLS/CA
	DB	0DH	;
	DB	0DH
	DB	'Z1013+K7659/2.029 RB'
	DB	8DH
	LD	HL,USTCK
	LD	(RSP),HL
	IM2
	JR	ES-#
;
;AUSGABE WHAT?
;
AWHAT:	LD	SP,STACK
	CALL	PRST7
	DB	0BFH
;
;EINGABESCHLEIFE
;
ES:	CALL	INLIN
	LD	DE,(SOIL)
	CALL	LOKSP
	LD	B,A
	INC	DE
	LD	A,(DE)
	LD	C,A
	PUSH	BC
	INC	DE
	CALL	INHEX
	JRNZ	ARG1S-#
	LD	A,(DE)
	CMP	3AH
	JRZ	KUB-#
ARG1S:	LD	(ARG1),HL
	CALL	INHEX
ARG2S:	LD	(ARG2),HL
	CALL	INHEX
ARG3S:	LD	(ARG3),HL
KUB:	POP	BC
	EXAF
	LD	(ZILAD),DE
	LD	HL,AFELD
KZYK1:	LD	A,M
	CMP	B
	JRZ	KGEF-#
	INC	HL
	INC	HL
	INC	HL
	OR	A
	JRNZ	KZYK1-#
	LD	A,B
	CMP	40H
	JRNZ	AWHAT-#
	LD	HL,STACK
	LD	B,C
	JR	KZYK1-#
KGEF:	INC	HL
	LD	E,M
	INC	HL
	LD	D,M
	EX	DE,HL
	EXAF
	LD	BC,ES
	PUSH	BC
	JMP	M
;
;ADRESSFELD FUER PROGRAMMFUNKTIONEN
;
AFELD:	DB	'Z'
	DA	ZMON
	DB	'B'
	DA	BRIN
	DB	'C'
	DA	COMP
	DB	'D'
	DA	DSMEM
	DB	'E'
	DA	EXEC
	DB	'F'
	DA	FIND
	DB	'G'
	DA	GO
	DB	'O'
	DA	SOUT
	DB	'I'
	DA	INIT
	DB	'J'
	DA	JUMP
	DB	'K'
	DA	KILL
	DB	'L'
	DA	CLOAD
	DB	'M'
	DA	MEM
	DB	'N'
	DA	NEXT
	DB	'R'
	DA	REG
	DB	'S'
	DA	CSAVE
	DB	'T'
	DA	TRANS
	DB	'W'
	DA	WIND
	DB	0
;
;ENTSCHLUESSELUNG DES RST 20
;
RS20E:	EX	(SP),HL
	PUSH	AF
	LD	A,M
	LD	(BFC),A
	INC	HL
	POP	AF
	EX	(SP),HL
SUCH:	PUSH	HL
	PUSH	BC
	PUSH	AF
	LD	HL,SVC
	LD	A,(BFC)
	SLA	A
	LD	C,A
	LD	B,0
	ADD	HL,BC
	LD	A,M
	INC	HL
	LD	H,M
	LD	L,A
	POP	AF
	POP	BC
	EX	(SP),HL
	RET		;JMP ZUR AUSFUEHRUNG
;
;SVC - TABELLE
;
SVC:	DA	OUTCH		;0
	DA	INCH		;1
	DA	PRST7	;2
	DA	INHEX	;3
	DA	INKEY	;4
	DA	INLIN	;5
	DA	OUTHX	;6
	DA	OUTHL	;7
	DA	CSAVE	;8
	DA	CLOAD	;9
	DA	MEM	;10
	DA	WIND	;11
	DA	OTHLS	;12
	DA	OUTDP	;13
	DA	OUTSP	;14
	DA	TRANS	;15
	DA	INSTR	;16
	DA	KILL	;17
	DA	HEXUM	;18
	DA	ALFA 	;19
;
;EINGABE TASTATURBEHANDLUNG
;
INKEY:	DI
	PUSH	BC
	PUSH	DE
	PUSH	HL
	CALL	TAST
	POP	HL
	POP	DE
	POP	BC
	EI
	RET
;
;TASTENPOLLING BLIND
;
POLL:	XOR	A
	LD	(MLZ),A
	CALL	INKEY
	PUSH	AF
	XOR	A
	LD	(MLZ),A
	POP	AF
	RET
;
;AUSGABE DER BELEGUNG DES ZUSATZKOMMANDOVERTEILERS
;
ZMON:	LD	DE,0B0H	;ANFANG TABELLE
ZMON1:	LD	A,(DE)	;K.HOLEN
	AND	0E0H
	RZ
	BIT	7,A
	RNZ
	RST	20H
	DB	2,0C0H	;@
	LD	A,(DE)
	RST	20H
	DB	0
	RST	20H
	DB	2,0BEH	;>
	INC	DE
	LD	A,(DE)
	LD	L,A
	INC	DE
	LD	A,(DE)
	LD	H,A	;HL=ADRESSE
	RST	20H
	DB	7	;OUTHL
	RST	20H
	DB	2,8DH
	INC	DE
	JR	ZMON1-#
;
;AUSGABE UEBER PORT
;
SOUT:	LD	A,(ARG1)
	LD	C,A
	LD	A,(ARG2)
	OUT	A
	RET
;
;NMI-ROUTINE
;
NMIR:	CALL	SAVER
	POP	HL
	LD	(ABRK),HL
	LD	(RPC),HL
	LD	(RSP),SP
	LD	SP,STACK
	LD	DE,OPSEQ
	LD	BC,3
	LDIR
	CALL	REGAN
	LD	HL,ES
	PUSH	HL
	RETN
;
;INITIALISIERUNG NMI, ZM
;
NMIIN:	LD	HL,NMIR
	LD	(NMI+1),HL
	CALL	0FFEEH 	;ZM-INIT
	XOR	A
	LD	(ISOGR),A	;MODES LOESCHEN
	LD	A,0EH		;RESET FF
	OUT	8
	LD	A,(NMI)
	CMP	0C3H
	JRZ	NMII1-#
	LD	A,0C3H
	LD	(NMI),A
;STARTBEEP
	LD	BC,8040H
	CALL	0FFDCH	;BEEP
	LD	BC,800H
	CALL	0FFDCH	;PAUSE
	LD	BC,40H
	CALL	0FFDCH	;BEEP
NMII1:	LD	HL,SYCL
	LD	DE,SYNCL
	LD	BC,26
	LDIR
	RET
;
;HARDCOPYTREIBER
;
HARD1:	PUSH	HL
	PUSH	AF
	LD	HL,ISOGR
	BIT	3,M
	JRZ	HCO1-#
	CMP	0DH
	JRNZ	HCO2-#
	LD	A,1EH
HCO2:	CALL	0FFE8H	;DRAKK
HCO1:	POP	AF
	POP	HL
	PUSH	AF
	PUSH	BC
	PUSH	DE
	JMP	HCRET
TEST:	EQU	#
;
;****************************************************
;
	ORG	0F1F2H
;
SYCL:	DB	0D0H
	DB	07H	;SYNCHRO-LUECKE STANDARD 2000
;
; ehemaliges TASTATURCODE-FELD
;
TCF:	DB	0
	DB	0
	DB	0
R38:	DB	0C3H
	DA	AWHAT
	DA	0FA26H	;TASTATURTAB.-POINTER
	DA	0FF56H	;STRINGTAB.-POINTER
	DA	0	;$ ARBEITSZELLE
	DA	0EH	;LAENGE FU-TASTENTAB.
FUTAB:	DA	0F9FCH	;FU-TASTENPOS.-TAB.POINTER
	DA	0FA0AH	;FU-TASTENADR.-TAB.POINTER
BSTDI:	DA	3E0H	;DISTANZ BEI ROLLEN
BSTUA:	DA	0EC00H	;BWS-ANFANG
BSTOG:	DA	0F000H	;OBERE GRENZE BWS,GROESSER
;
;****************************************************
;
INCH:	NOP
	NOP
	NOP
WHICH:	CALL	INKEY
	OR	A
	JRZ	WHICH-#
	NOP
	NOP
	NOP
	RET
;
;****************************************************
;
;AUSGABE EINES ZEICHENS AUF DEM BILDSCHIRM
;
OUTCM:	AND	7FH
OUTCH:	JMP	HARD1
HCRET:	PUSH	HL
	LD	HL,(CURSR)
	PUSH	AF
	LD	A,(CZSP)
	LD	M,A
	POP	AF
	CMP	0DH	;ENTER
	JRZ	NEWLN-#
	CMP	0CH	;CLS/CA
	JRZ	CLSCA-#
	CMP	08H
	JRZ	KURU-#
	CMP	09H
	JRZ	SCHR-#
ZEIN:	LD	M,A
SCHR:	INC	HL
PRUL:	EX	DE,HL
	LD	HL,(BSTAB+4)
	XOR	A
	SBC	HL,DE
	EX	DE,HL
	JRNZ	USPR-#
ROLL:	LD	DE,(BSTAB+2)
	LD	HL,20H
	ADD	HL,DE
	LD	BC,(BSTAB)
	LD	A,B
	OR	C
	JRZ	USX-#
	LDIR
USX:	PUSH	DE
	POP	HL
	PUSH	HL
	INC	DE
	LD	M,20H
	LD	BC,1FH
	LDIR
	LD	HL,(SOIL)
	LD	DE,20H
	XOR	A
	SBC	HL,DE
	LD	(SOIL),HL
	POP	HL
USPR:	LD	A,M
	LD	(CZSP),A
	LD	M,0FFH
	LD	(CURSR),HL
RTOC:	POP	HL
	POP	DE
	POP	BC
	POP	AF
	RET
;
;KURSOR RUECKWAERTS
;
KURU:	DEC	HL
	JR	PRUL-#
;
;NEWLINE
;
NEWLN:	LD	A,0E0H
	AND	L
	ADD	20H
	LD	C,A
WCLL:	LD	M,20H
	INC	HL
	LD	A,L
	CMP	C
	JRNZ	WCLL-#
	JR	PRUL-#
;
;CLEAR SCREEN / CURSOR AUF ANFANG
;
CLSCA:	LD	HL,(BSTAB)
	LD	BC,1FH
	ADD	HL,BC
	PUSH	HL
	POP	BC
	LD	HL,(BSTAB+2)
	PUSH	HL
	LD	M,20H
	PUSH	HL
	POP	DE
	INC	DE
	LDIR
	POP	HL
	JR	USPR-#
;
;***********************************************
;AUSGABE ZEICHENKETTE BIS BIT 7 GESETZT
;***********************************************
;
PRST7:	EX	(SP),HL
PS01:	LD	A,M
	INC	HL
	PUSH	AF
	CALL	OUTCM
	POP	AF
	BIT	7,A
	JRZ	PS01-#
	EX	(SP),HL
	RET
;
;***********************************************
;EINGABE EINER ZEILE
;***********************************************
;
INLIN:	CALL	PRST7
	DB	' #'
	DB	0A0H	;20H + B7
INSTR:	PUSH	HL
	LD	HL,(CURSR)
	LD	(SOIL),HL
CHIN:	RST	20H
	DB	1	;INCH
	RST	20H
	DB	0
	CMP	0DH
	JRNZ	CHIN-#
	POP	HL
	RET
;
;**********************************************
;LOOK SPACE
;**********************************************
;
LOKSP:	LD	A,(DE)
	CMP	20H
	RNZ
	INC	DE
	JR	LOKSP-#
;
;***********************************************
;ISO-ZEICHEN RUECKWANDELN
;***********************************************
;
IR:	CALL	LOKSP
	XOR	A
	LD	HL,DATA
	LD	M,A
	INC	HL
	LD	M,A
IR2:	LD	A,(DE)
	DEC	HL
	SUB	30H
	RM
	CMP	0AH
	JRC	IR3-#	;0...9
	SUB	07H
	CMP	0AH
	RM
	CMP	10H
	RP
IR3:	INC	DE
	RLD
	INC	HL
	RLD
	JR	IR2-#
;
;************************************************
;KONVERTIERUNG ISO IN HEX
;************************************************
;
INHEX:	PUSH	BC
	CALL	IR
	LD	B,H
	LD	C,L
	LD	L,M
	INC	BC
	LD	A,(BC)
	LD	H,A
	OR	L
	POP	BC
	RET
;
;************************************************
;OUTHX  A --> 2 BYTE HEX
;************************************************
;
OUTHX:	PUSH	AF
	RRA
	RRA
	RRA
	RRA
	CALL	OUTA
	POP	AF
OUTA:	PUSH	AF
	AND	0FH
	ADD	30H
	CMP	3AH
	JRC	OUTC-#
	ADD	07H
OUTC:	CALL	OUTCH
	POP	AF
	RET
;
;***********************************************
;OUTHL  --> HEX-AUSGABE VON HL
;***********************************************
;
OUTHL:	PUSH	AF
	LD	A,H
	CALL	OUTHX
	LD	A,L
	CALL	OUTHX
	POP	AF
	RET
;
;***********************************************
;MEMORY
;***********************************************
;
MEM:	LD	HL,(ARG1)
MAUS:	RST	20H
	DB	7	;OUTHL
	PUSH	HL
	RST	20H
	DB	14
	LD	A,M
	RST	20H
	DB	6	;OUTHX
	CALL	INLIN
	LD	DE,(SOIL)
	LD	A,(DE)
	EXAF
	POP	HL
	DEC	HL
MAUS1:	INC	HL
	PUSH	HL
	CALL	INHEX
	JRZ	MAUS4-#
MAUS2:	LD	A,L
	POP	HL
	LD	M,A
	CMP	M
	JRZ	MAUS1-#
	RST	20H
	DB	2
	DB	'ER'
	DB	0A0H	;SP + 7   ---> ERROR
MAUS3:	JR	MAUS-#
MAUS4:	LD	A,(DE)
	CMP	20H
	JRZ	MAUS2-#
	POP	HL
	INC	HL
	LD	(ARG2),HL
	CMP	3BH	;  ";" ALS ABSCHLUSS VOM MEMORY
	RZ
	EXAF
	CMP	20H
	JRZ	MAUS-#
	DEC	HL
	CMP	'R'
	JRNZ	MAUS-#
	DEC	HL
	JR	MAUS-#
;
;********************************************************
;SAVE TO CASSETTE
;UP ZUR AUSGABE EINES DATENBEREICHES AUF MB
;AADR = ARG1      EADR = ARG2
;********************************************************
;
CSAVE:	LD	HL,(ARG1)	;ANFANGSADRESSE
	CALL	BSA
DS1:	EX	DE,HL
	LD	HL,(ARG2)	;ENDEADRESSE
	AND	A
	SBC	HL,DE
	EX	DE,HL
	RC
	CALL	BS
	JR	DS1-#
;
;UP ZUR AUSGABE EINES BLOCKES
;
BSA:	LD	DE,(SYNCL)	;KENNTON 3.5 S
	JR	BSX-#
BS:	LD	DE,14
BSX:	PUSH	HL
	POP	IX
BSMK:	LD	B,112	;VORBLOCK CA 675 HZ
BSX1:	DJNZ	BSX1-#
	CALL	FLOUT
	DEC	DE
	LD	A,E
	OR	D
	JRNZ	BSMK-#
	LD	C,2 	;2X1
BSM0:	LD	B,54	;BSN5...830 HZ
BSX5:	DJNZ	BSX5-#
	CALL	FLOUT
	DEC	C
	JRNZ	BSM0-#
	PUSH	IX	;IX=KOPFINHALT
	POP	DE
	LD	B,18	;BSN0 AUSGABE KENNZEICHEN
BSX0:	DJNZ	BSX0-#
	CALL	WS
	LD	B,15	;BSN1...
BSW1:	DJNZ	BSW1-#
	LD	C,16	;DATEN 16X16=32X8
BSM1:	LD	E,M
	INC	HL
	LD	D,M
	ADD	IX,DE
	INC	HL
	PUSH	BC
	CALL	WS
	POP	BC
	DEC	C
	JRZ	BSM2-#
	LD	B,14	;BSM2...
BSX2:	DJNZ	BSX2-#
	JR	BSM1-#
BSM2:	PUSH	IX	;ENDE DATEN
	POP	DE	;AUSGABE PRUEFSUMME
	LD	B,16	;BSO3...
BSX3:	DJNZ	BSX3-#
	CALL	WS
	RET
;
;AUSGABE EINES WORTES -16 BIT IN DE
;
WS:	LD	C,16
WSM0:	SRL	D
	RR	E
	JRNC	WSM1-#
	LD	B,3	;WSN1...
BSWS1:	DJNZ	BSWS1-#
	NOP
	JR	WSM3-#
WSM1:	CALL	FLOUT
WSM3:	LD	B,25	;WSN2...
BSWS2:	DJNZ	BSWS2-#
WSM2:	CALL	FLOUT
	DEC	C
	RZ
	LD	B,21	;WSN3...
BSWS3:	DJNZ	BSWS3-#
	JR	WSM0-#
;
;FLANKENAUSGABE BIT 7 PORT B
;
FLOUT:	IN	2
	XOR	80H
	OUT	2
	RET
;
;*********************************
;LOAD FROM CASSETTE
;*********************************
;
CLOAD:	LD	HL,(ARG1)
DLM0:	CALL	BL
	JRZ	DLM1-#
	CALL	PRST7
	DB	'CS'
	DB	0BCH
	CALL	OUTHL
	CALL	OUTSP
DLM1:	EX	DE,HL
	LD	HL,(ARG2)	;ENDE-ADRESSE
	AND	A
	SBC	HL,DE
	EX	DE,HL
	RC
	JR	DLM0-#
;
;UP ZUR EINGABE EINES DATENBLOCKES
;
BL:	CALL	BITIN
	CALL	FIFLA
	LD	C,7
BLM1:	LD	DE,0910H	;BLN9...BLN11
	LD	A,7	;BLN1....
SW1:	DEC	A
	JRNZ	SW1-#
	CALL	BITIN
BLMX:	CALL	BITIN
	JRNZ	BL-# 	;VERAENDERUNG ERKANNT?
	DEC	D	;JA
	JRNZ	BLMX-#
	DEC	C
	JRZ	BLM4-#	;SYNC.-FELD ERKANNT?
BLM2:	IN	2
	XOR	B
	BIT	6,A
	JRNZ	BLM1-#	;FLANKE ERKANNT ?
	DEC	E
	JRNZ	BLM2-#	;WARTEN
	JR	BL-#	;TIME OUT
;
;7 NULLEN SIND ERKANNT WORDEN
;
BLM4:	CALL	FIFLA
	LD	A,68
SW3:	DEC	A
	JRNZ	SW3-#
	CALL	BITIN
	JRNZ	BLM4-#	;AUF 1 WARTEN
	CALL	FIFLA
	LD	A,30	;BLN4....
SW4:	DEC	A
	JRNZ	SW4-#
	CALL	WL
	LD	C,16
	PUSH	DE
	POP	IX	;CRC ANFANGSWERT
	LD	A,26	;BLN10....
SW10:	DEC	A
	JRNZ	SW10-#
BLM5:	CALL	WL
	ADD	IX,DE
	PUSH	BC
	LD	C,L
	LD	B,H
	LD	HL,(ARG2)	;ENDADRESSE
	XOR	A
	SBC	HL,BC
	LD	L,C
	LD	H,B
	POP	BC
	JRC	BLM6-#
	LD	M,E
	INC	HL
	LD	M,D
	JR	BLM7-#
BLM6:	LD	A,1	;BLN5...
SW5:	DEC	A
	JRNZ	SW5-#
	INC	HL
BLM7:	INC	HL
	DEC	C
	JRZ	BLM8-#
	LD	A,18	;BLN6...
SW6:	DEC	A
	JRNZ	SW6-#
	JR	BLM5-#
BLM8:	LD	A,18	;BLN7
SW7:	DEC	A
	JRNZ	SW7-#
	CALL	WL	;PRUEFSUMME LESEN
	EX	DE,HL
	PUSH	IX
	POP	BC
	XOR	A
	SBC	HL,BC
	EX	DE,HL
	RET
;
;UP ZUM LESEN EINES WORTES
;
WL:	PUSH	HL
	LD	L,16
WLM0:	CALL	BITIN
	JRNZ	WLM1-#
	XOR	A	;C=0
	JR	WLM2-#
WLM1:	SCF
WLM2:	RR	D
	RR	E
	CALL	FIFLA
	DEC	L
	JRZ	WLM3-#
	LD	A,30	;WLN1...
SWLN1:	DEC	A
	JRNZ	SWLN1-#
	JR	WLM0-#
WLM3:	POP	HL
	RET
;
;UP ZUR EINGABE EINES BIT
;
BITIN:	IN	2
	XOR	B
	BIT	6,A
	PUSH	AF
	XOR	B
	LD	B,A
	POP	AF
	RET
;
;FINDEN EINER FLANKE
;
FIFLA:	IN	2
	XOR	B
	BIT	6,A
	JRZ	FIFLA-#
	RET
;
;*********************************
;DISPLAY MEMORY
;*********************************
;
DSMEM:	LD	HL,(ARG1)
WAUS:	LD	DE,(ARG2)
	SCF
	PUSH	HL
	SBC	HL,DE
	POP	HL
	RNC
	RST	20H
	DB	7	;OUTHL
	LD	BC,0800H
	LD	E,0
ZEILA:	RST	20H
	DB	2
	DB	0A0H
	LD	A,M
	RST	20H
	DB	6	;OUTHX
	ADD	C
	LD	C,A
	JRNC	INCHL-#
	LD	A,0
	ADC	E
	LD	E,A
INCHL:	INC	HL
	DJNZ	ZEILA-#
	RST	20H
	DB	2
	DB	0A0H
	LD	A,E
	CALL	OUTA
	LD	A,C
	RST	20H
	DB	6	;OUTHX
	JR	WAUS-#
;
;*********************************
;
LARG:	LD	HL,(ARG1)
	LD	DE,(ARG2)
	LD	BC,(ARG3)
	RET
;
;*********************************
;
;
;KILL
;
KILL:	CALL	LARG
	LD	M,C
	PUSH	HL
	XOR	A
	EX	DE,HL
	SBC	HL,DE
	LD	B,H
	LD	C,L
	POP	HL
	LD	D,H
	LD	E,L
	INC	DE
	LDIR
	RET
;
;**********************************
;TRANSFER
;**********************************
;
TRANS:	CALL	LARG
	XOR	A
	PUSH	HL
	SBC	HL,DE
	POP	HL
	JRC	TR1-#
	LDIR
	RET
TR1:	ADD	HL,BC
	EX	DE,HL
	ADD	HL,BC
	EX	DE,HL
	DEC	HL
	DEC	DE
	LDDR
	RET
;
;**********************************
;REGISTER AUF RSA RETTEN
;*********************************
;
SAVER:	LD	(DATA),SP
	LD	SP,RPC
	PUSH	IX
	PUSH	IY
	PUSH	AF
	PUSH	BC
	PUSH	DE
	PUSH	HL
	EXX
	EXAF
	PUSH	AF
	PUSH	BC
	PUSH	DE
	PUSH	HL
	JR	SWL-#
;
;*********************************
;REGISTER AUS RSA LADEN
;*********************************
;
LOADR:	LD	(DATA),SP
	LD	SP,RHLEX
	POP	HL
	POP	DE
	POP	BC
	POP	AF
	EXX
	EXAF
	POP	HL
	POP	DE
	POP	BC
	POP	AF
	POP	IY
	POP	IX
SWL:	LD	SP,(DATA)
	RET
;
;*******************************
;BREAKBEHANDLUNGSPROGRAMM
;*******************************
;
BREAK:	CALL	SAVER
	POP	HL	;KORREKTUR DES EINGEBAUTEN CAL
	LD	(RSP),SP
	LD	SP,STACK
	DEC	HL
	DEC	HL
	DEC	HL
	LD	(RPC),HL
	LD	DE,(ABRK)	;BREAKADRESSE
	LD	HL,OPSEQ
	LD	BC,3
	LDIR
	CALL	REGAN
	JMP	ES
;
;********************************
;BREAKEINGABE
;********************************
;
BRIN:	LD	HL,(ARG1)
	LD	(ABRK),HL
	LD	DE,OPSEQ
	LD	BC,3
	LDIR
	CALL	REGAN
	RET
;
;********************************
;EXECUTE
;********************************
;
EXEC:	LD	HL,(ABRK)
	LD	M,0CDH
	INC	HL
	LD	DE,BREAK
	LD	M,E
	INC	HL
	LD	M,D
;
;********************************
;JUMP
;********************************
;
JUMP:	LD	HL,(ARG1)
JUMP1:	LD	(RPC),HL
	LD	SP,(RSP)
	PUSH	HL
	JMP	LOADR
;
;********************************
;GO
;********************************
;
GO:	LD	HL,(RPC)
	LD	(ARG1),HL
	LD	DE,(ABRK)
	XOR	A
	SBC	HL,DE
	JRNZ	EXEC-#
	JR	JUMP-#
;
;********************************
;REGISTERAUSGABE
;********************************
;
OUTDP:	RST	20H
	DB	2
	DB	0BAH	;:+B7
OTHLS:	LD	A,M
	RST	20H
	DB	6	;OUTHX
	DEC	HL
OTHXS:	LD	A,M
	RST	20H
	DB	6
	DEC	HL
OUTSP:	RST	20H
	DB	2	;OUTSP
	DB	0A0H
	RET
;
;AUSGABE 1/0
;
PEINS:	RST	20H
	DB	2
	DB	'1'
	DB	0A0H
	RET
;
PNULL:	JRNZ	PEINS-#
	RST	20H
	DB	2
	DB	'0'
	DB	0A0H
	RET
;
;ENTRY	REGISTER
;
REG:	CMP	3AH
	JPNZ	REEIN	;NEIN
REGAN:	RST	20H
	DB	2
	DB	0DH
	DB	'B'
	DB	0D0H	;P+B7
	LD	HL,ABRK+1
	RST	20H
	DB	13	;OUTDP
	RST	20H
	DB	2
	DB	'BS'
	DB	0BAH
	LD	B,3
	LD	HL,OPSEQ
NZX:	LD	A,M
	RST	20H
	DB	6
	INC	HL
	DJNZ	NZX-#
FLAGS:	RST	20H
	DB	2
	DB	'   S Z C'
	DB	0A0H
	LD	A,(RAFM)
	LD	L,A
AUSFR:	BIT	7,L
	CALL	PNULL
	BIT	6,L
	CALL	PNULL
	BIT	0,L
	CALL	PNULL
	LD	HL,RSP+1
	LD	B,2
TSP:	RST	20H
	DB	2	;PRST7
	DB	'S'
	DB	0D0H	;P+B7
	RST	20H
	DB	13	;OUTDP
TPC:	RST	20H
	DB	2
	DB	'P'
	DB	0C3H	;C+B7
	RST	20H
	DB	13
TIX:	RST	20H
	DB	2
	DB	'I'
	DB	0D8H
	RST	20H
	DB	13
TIY:	RST	20H
	DB	2
	DB	'I'
	DB	0D9H	;Y+B7
	RST	20H
	DB	13
MRESP:	RST	20H
	DB	2
	DB	'A'
	DB	0C6H	;F+B7
	RST	20H
	DB	13
	RST	20H
	DB	2
	DB	'B'
	DB	0C3H	;C+B7
	RST	20H
	DB	13
	RST	20H
	DB	2
	DB	'D'
	DB	0C5H	;E+B7
	RST	20H
	DB	13
	RST	20H
	DB	2
	DB	'H'
	DB	0CCH	;L+B7
	RST	20H
	DB	13
	DJNZ	MRESP-#
	LD	HL,(CURSR)
	DEC	HL
	LD	M,27H
	RET
;
;REGISTEREINGABE
;
REEIN:	LD	BC,0400H
	LD	HL,(SOIL)
	INC	HL
	INC	HL
	LD	DE,TSP+2
NBF:	LD	A,(DE)
NVGR:	CMP	M
	JRZ	R1GEF-#
	INC	DE
NSU:	PUSH	HL
	LD	HL,5
	ADD	HL,DE
	EX	DE,HL
	POP	HL
	INC	C
	DJNZ	NBF-#
	LD	B,4
	LD	A,C
	CMP	8
	JRNZ	NBF-#
ENDER:	POP	AF
	RST	38H
HLR:	DEC	HL
	JR	NSU-#
R1GEF:	INC	DE
	INC	HL
	LD	A,(DE)
	AND	7FH
	CMP	M
	JRNZ	HLR-#
RNGEF:	INC	HL
	LD	A,M
	CMP	27H
	LD	A,C
	JRNZ	ADRE-#
	ADD	4
ADRE:	SLA	A
	LD	C,A
	LD	B,0
	LD	HL,RSP+1	;RSP+1
	SBC	HL,BC
	LD	B,H
	LD	C,L
WAUSG:	RST	20H
	DB	12		;OTHLS
	CALL	INLIN
	LD	DE,(SOIL)
	CALL	INHEX
	JRNZ	AXX-#
	LD	A,(DE)
	CMP	3BH		;?
	RZ
AXX:	EX	DE,HL
	PUSH	BC
	POP	HL
	LD	M,D
	DEC	HL
	LD	M,E
	JMP	REGAN
;
;
;
;******************************
;UMSCHALTUNG DER TASTATUR HEXA
;******************************
;
HEXUM:	RET
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	RET
;
;*************************************
;RUECKSCHALTUNG DER TASTATUR ALFA
;*************************************
;
ALFA:	RET
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	RET
;
;*******************************
;WINDOW
;*******************************
;
WIND:	CALL	PGR
	JRC	ERROR-#
WIND1:	LD	(BSTAB),HL
	LD	(BSUAN),BC
	LD	HL,(ARG2)
	LD	(BSOGR),HL
	LD	HL,(CURSR)
	LD	M,20H
CUNEU:	LD	(CURSR),BC
	RET
PGR:	LD	A,(ARG1+1)
	CMP	0ECH
	RC
	LD	A,(ARG1)
	AND	0E0H
	LD	(ARG1),A
	LD	A,(ARG2)
	AND	0E0H
	LD	(ARG2),A
	LD	HL,(ARG2)
	LD	BC,(ARG1)
	SBC	HL,BC
	RC
	JRZ	CS-#
	DEC	HL
	LD	A,3
	CMP	H
	RC
	INC	HL
	LD	DE,40H
	SBC	HL,DE
	RC
	LD	DE,20H
	ADD	HL,DE
	RET
CS:	SCF
	RET
ERROR:	POP	AF
	RST	38H
;
;********************************
;
PIOT:	DB	0FEH	;INT-VEKTOR
	DB	97H	;INT GENERIERUNG
	DB	0DFH	;BIT 5 - A0
;
;NEXT = STEP
;
NEXT:	LD	A,0F7H
	LD	I,A
	DI
	LD	HL,PIOT
	LD	BC,0303H
	OTIR
	LD	HL,(ABRK)
	DEC	HL
	LD	A,M
	LD	(ZSFEI),A
	LD	M,0FBH	;EI-BEFEHL
	LD	(SSP),SP
	LD	SP,(RSP)
	PUSH	HL
	JMP	LOADR
;
;********************************
;
;RUECKKEHR VOM SCHRITTBETRIEB
;
RVSB:	DI
	CALL	SAVER
	LD	A,07H
	OUT	3
	LD	HL,(ABRK)
	DEC	HL
	LD	A,(ZSFEI)
	LD	M,A
	POP	HL
	LD	(ABRK),HL
	LD	(RPC),HL
	LD	(RSP),SP
	LD	SP,(SSP)
	LD	DE,OPSEQ
	LD	BC,3
	LDIR
	LD	HL,REGAN
	PUSH	HL
	RETI
;
;*******************************
;VERGLEICH ZWEIER ZEICHENKETTEN
;*******************************
;
COMP:	CALL	LARG
M3D:	LD	A,(DE)
	CMP	M
M3E:	JRNZ	M40-#
M3F:	DEC	BC
	INC	HL
	INC	DE
	LD	A,B
	OR	C
	RZ
	JR	M3D-#
M40:	RST	20H
	DB	7
	RST	20H
	DB	14
	LD	A,M
	RST	20H
	DB	6
	RST	20H
	DB	14
	EX	DE,HL
	RST	20H
	DB	7
	RST	20H
	DB	14
	EX	DE,HL
	LD	A,(DE)
	RST	20H
	DB	6
	RST	20H
	DB	2
	DB	8DH
	RST	20H
	DB	1
M41:	CMP	0DH
	RNZ
	JR	M3F-#
;
;******************************
;FIND
;******************************
;
FIND:	LD	DE,(ZILAD)
	DEC	DE
	DEC	DE
	LD	(ARG3),DE
	LD	BC,(ARG1)
M42:	LD	DE,(ARG3)
	RST	20H
	DB	3H
M43:	LD	A,(BC)
	CMP	L
	JRZ	M44-#
	INC	BC
	LD	A,B
	OR	C
	JRZ	M46-#
	JR	M43-#
M44:	PUSH	BC
	PUSH	DE
	LD	DE,(ARG2)
	DEC	DE
	LD	(LAENG),DE
	INC	BC
MARK1:	LD	A,D
	OR	E
	POP	DE
	JRZ	M451-#
M45:	RST	20H
	DB	3H	;INHEX
	LD	A,(BC)
	CMP	L
	JRNZ	M452-#
	PUSH	DE
	LD	DE,(LAENG)
	DEC	DE
	LD	(LAENG),DE
	INC	BC
	JR	MARK1-#
M451:	POP	BC	;GEFUNDEN
	LD	(ARG1),BC
	JMP	MEM
M452:	POP	BC
	INC	BC
	JR	M42-#
M46:	RST	20H
	DB	2
	DB	'NOT FOUND'
	DB	8DH
	RET
	ORG	0F7FEH
APIB:	DA	RVSB
	END
