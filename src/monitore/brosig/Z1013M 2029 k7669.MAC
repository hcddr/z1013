	NAME	('M2')
	.Z80
;****************************************************************
;
; MONITOR DES Z1013 geaendert    V. 2.02/9
;
; (c) Rainer Brosig
;
;         26.11.89
;
;Version 1.0 fuer Tastatur K 7669
;Stand   26.11.1989
;
;****************************************************************
;
; VEREINBARUNGEN
;
PIOAD	EQU	0		;DATEN USER-PIO-PORT
PIOAC	EQU	1H		;STEUERWORT USER-PIO-PORT
PIOBD	EQU	2H		;DATEN PIO PORT B
PIOBC	EQU	3H		;STEUERWORT PIO PORT B
LATCH	EQU	8H		;TASTATUR-LATCH
HWMOD	EQU	4H		;LATCH ZUR HARDWAREMODIFIKATION
RST0	EQU	0
BFC	EQU	3
MLZ	EQU	4		;MERKE LETZTES ZEICHEN VON?
;
CALL5	EQU	5		;CALL FREI
;
RST8	EQU	8		;FREI
ABRK	EQU	0BH		;ADRESSE BREAK
OPSEQ	EQU	0DH		;OPERANDENSEQUENZ BEIBREAK
;
RST10	EQU	10H		;FREI
DATA	EQU	13H		;3 BYTE DATA BEI INHEX
SOIL	EQU	16H		;START OF INPUTLINE
;
RST18	EQU	18H		;FREI
ARG1	EQU	1BH		;ARGUMENT 1
ARG2	EQU	1DH		;ARGUMENT 2
CZSP	EQU	1FH		;CODE ZWISCHENSPEICHERFUER ????
;
RST20	EQU	20H		;ZENTRALER ANSPRUNG FUER ????
ARG3	EQU	23H		;ARGUMENT 3
ZILAD	EQU	25H		;ZWEITE INLINE ADRESSE
ISOGR	EQU	27H		;MODEFLAG
;
RST28	EQU	28H		;FREI
CURSR	EQU	2BH		;CURSOR
CSP	EQU	2DH		;CURSOR ZWISCHENSPEICHER
MZ1	EQU	2FH		;MERKE PHASENLAGE
;
RST30	EQU	30H		;FREI
SYNCL	EQU	33H		;SYNCHRONISATIONSLUECKE
TACO	EQU	35H		;TASTENCODETABELLE
;
RST38	EQU	38H		;BEI RST 38 JMP ZU AWHAT
BSTAB	EQU	TACO+18		;ROLLDISTANZ IM OUTCH
BSUAN	EQU	BSTAB+2		;BS UNTEN ANFANG
BSOGR	EQU	BSUAN+2		;BS OBEN GROESSER
RHLEX	EQU	BSOGR+2
RDEEX	EQU	RHLEX+2
RBCEX	EQU	RDEEX+2
RAFEX	EQU	RBCEX+2
RHLM	EQU	RAFEX+2
RDEM	EQU	RHLM+2
RBCM	EQU	RDEM+2
RAFM	EQU	RBCM+2
RIY	EQU	RAFM+2
RIX	EQU	RIY+2
RPC	EQU	RIX+2
RSP	EQU	RPC+2
NMI	EQU	66H		;FREI FUER NMI
ZSFEI	EQU	69H		;ZWISCHENSPEICHER FUER EI
SSP	EQU	ZSFEI+1		;SYSTEMSTACK-ZWISCHENSPEICHER
LAENG	EQU	SSP+2		;
;
USTCK	EQU	90H		;USER-STACK
STACK	EQU	0B0H		;SYSTEMSTACK
CUSB	EQU	0B0H		;CASSETTEN-UEBERSPIELBEREICH
;
MOFL	EQU	27H		;MODEFLAGS
				;BIT 0 : LANGE REPEATVERZ.DUCHLAUFEN
				;    1 : STRINGAUSGABE
				;    2 : GRAFIKMODE ON
				;    3 : HARDCOPY ON
				;    4 : SM-TASTENBELEGUNG ON
				;    5 : TASTATURPEEP ON
				;    6 : SLOW (STEUERUNG DURCH TASTE D53)
				;    7 : TASTE BETAETIGT
THTP	EQU	39H		;ZEITK.TASTENPEEP
ZKPOS	EQU	3H		;ZEITK.POSITIV-ENTPRELLUNG
ZKNEG	EQU	4H		;ZEIK.NEGATIV-ENTPRELLUNG
ZPZ	EQU	4H		;ZEICHENPUFFERZELLE
TAPOI	EQU	3BH		;TAST.-TAB.-POINTER
PO$TA	EQU	3DH		;POINTER STRINGTAB.ANF.
NEXT$	EQU	3FH		;POINTER N. ZEICHEN
LFTB	EQU	41H		;LAENGE F-TASTEN-POS.TABGZ.
FTPOI	EQU	43H		;F-TASTEN-POS.TAB.POINTER
FTAPO	EQU	45H		;F-TASTEN-ADRESS-TAB.-POINTER
AZZ	EQU	35H		;AKTUELLER ZEILENZAEHLER
APZ	EQU	AZZ+1		;AKT. POSITONSZAEHLER
ASZ	EQU	AZZ+2		;AKT. SEITENZAEHLER
;
;
;*********************************************************
; Z 1013  MONITOR 2.02/9
;
.PHASE	0F000H
;
START:	JR	STAR1
INIT:	LD	HL,RHLEX
	LD	DE,RHLEX+1
	LD	M,0
	LD	BC,21
	LDIR
STAR1:	LD	SP,STACK
	NOP
	CALL	NMIIN
RSEI:	LD	A,0C3H
	LD	(RST20),A
	LD	HL,RS20E
	LD	(RST20+1),HL
PIOIN:	LD	A,0CFH		;PORT B  BITBETRIEB
	OUT	(PIOBC),A
	LD	A,07FH
	OUT	(PIOBC),A
TABUM:	LD	HL,FUTAB
	LD	DE,43H
	LD	BC,0AH
	LDIR
	RST	20H
	DB	2
	DB	0CH		;CLS/CA
	DB	0DH		;
	DB	0DH
	DB	'Z1013+K7669/2.029 RB'
	DB	8DH
	LD	HL,USTCK
	LD	(RSP),HL
	IM	2
	JR	ES
;
;AUSGABE WHAT?
;
AWHAT:	LD	SP,STACK
	CALL	PRST7
	DB	0BFH
;
;EINGABESCHLEIFE
;
ES:	CALL	INLIN
	LD	DE,(SOIL)
	CALL	LOKSP
	LD	B,A
	INC	DE
	LD	A,(DE)
	LD	C,A
	PUSH	BC
	INC	DE
	CALL	INHEX
	JR	NZ,ARG1S
	LD	A,(DE)
	CP	3AH
	JR	Z,KUB
ARG1S:	LD	(ARG1),HL
	CALL	INHEX
ARG2S:	LD	(ARG2),HL
	CALL	INHEX
ARG3S:	LD	(ARG3),HL
KUB:	POP	BC
	EX	AF,AF'
	LD	(ZILAD),DE
	LD	HL,AFELD
KZYK1:	LD	A,M
	CP	B
	JR	Z,KGEF
	INC	HL
	INC	HL
	INC	HL
	OR	A
	JR	NZ,KZYK1
	LD	A,B
	CP	40H
	JR	NZ,AWHAT
	LD	HL,STACK
	LD	B,C
	JR	KZYK1
KGEF:	INC	HL
	LD	E,M
	INC	HL
	LD	D,M
	EX	DE,HL
	EX	AF,AF'
	LD	BC,ES
	PUSH	BC
	JP	(HL)
;
;ADRESSFELD FUER PROGRAMMFUNKTIONEN
;
AFELD:	DB	'Z'
	DW	ZMON
	DB	'B'
	DW	BRIN
	DB	'C'
	DW	COMP
	DB	'D'
	DW	DSMEM
	DB	'E'
	DW	EXEC
	DB	'F'
	DW	FIND
	DB	'G'
	DW	GO
	DB	'O'
	DW	SOUT
	DB	'I'
	DW	INIT
	DB	'J'
	DW	JUMP
	DB	'K'
	DW	KILL
	DB	'L'
	DW	CLOAD
	DB	'M'
	DW	MEM
	DB	'N'
	DW	NEXT
	DB	'R'
	DW	REG
	DB	'S'
	DW	CSAVE
	DB	'T'
	DW	TRANS
	DB	'W'
	DW	WIND
	DB	0
;
;ENTSCHLUESSELUNG DES RST 20
;
RS20E:	EX	(SP),HL
	PUSH	AF
	LD	A,M
	LD	(BFC),A
	INC	HL
	POP	AF
	EX	(SP),HL
SUCH:	PUSH	HL
	PUSH	BC
	PUSH	AF
	LD	HL,SVC
	LD	A,(BFC)
	SLA	A
	LD	C,A
	LD	B,0
	ADD	HL,BC
	LD	A,M
	INC	HL
	LD	H,M
	LD	L,A
	POP	AF
	POP	BC
	EX	(SP),HL
	RET			;JMP ZUR AUSFUEHRUNG
;
;SVC - TABELLE
;
SVC:	DW	OUTCH		;0
	DW	INCH		;1
	DW	PRST7		;2
	DW	INHEX		;3
	DW	INKEY		;4
	DW	INLIN		;5
	DW	OUTHX		;6
	DW	OUTHL		;7
	DW	CSAVE		;8
	DW	CLOAD		;9
	DW	MEM		;10
	DW	WIND		;11
	DW	OTHLS		;12
	DW	OUTDP		;13
	DW	OUTSP		;14
	DW	TRANS		;15
	DW	INSTR		;16
	DW	KILL		;17
	DW	HEXUM		;18
	DW	ALFA		;19
;
;EINGABE TASTATURBEHANDLUNG
;
INKEY:	PUSH	BC
	PUSH	DE
	PUSH	HL
	CALL	TAST
	POP	HL
	POP	DE
	POP	BC
	RET
;
;TASTENPOLLING BLIND
;
POLL:	XOR	A
	LD	(MLZ),A
	CALL	INKEY
	PUSH	AF
	XOR	A
	LD	(MLZ),A
	POP	AF
	RET
;
;AUSGABE DER BELEGUNG DES ZUSATZKOMMANDOVERTEILERS
;
ZMON:	LD	DE,0B0H		;ANFANG TABELLE
ZMON1:	LD	A,(DE)		;K.HOLEN
	AND	0E0H
	RET	Z
	BIT	7,A
	RET	NZ
	RST	20H
	DB	2,0C0H		;@
	LD	A,(DE)
	RST	20H
	DB	0
	RST	20H
	DB	2,0BEH		;>
	INC	DE
	LD	A,(DE)
	LD	L,A
	INC	DE
	LD	A,(DE)
	LD	H,A		;HL=ADRESSE
	RST	20H
	DB	7		;OUTHL
	RST	20H
	DB	2,8DH
	INC	DE
	JR	ZMON1
;
;AUSGABE UEBER PORT
;
SOUT:	LD	A,(ARG1)
	LD	C,A
	LD	A,(ARG2)
	OUT	(HWMOD),A
	RET
;
;NMI-ROUTINE
;
NMIR:	CALL	SAVER
	POP	HL
	LD	(ABRK),HL
	LD	(RPC),HL
	LD	(RSP),SP
	LD	SP,0B0H
	LD	DE,OPSEQ
	LD	BC,3
	LDIR
	CALL	REGAN
	LD	SP,STACK
	LD	HL,ES
	PUSH	HL
	RETN
;
;INITIALISIERUNG NMI, ZM
;
NMIIN:	LD	A,(NMI)
	CP	0C3H
	JR	Z,NMII1
	LD	A,0C3H
	LD	(NMI),A
	LD	HL,NMIR
	LD	(NMI+1),HL
	CALL	0FFEEH		;ZM-INIT
;STARTBEEP
	XOR	A
	LD	(ISOGR),A
	LD	BC,0A040H
	CALL	0FFDCH		;BEEP
	LD	BC,500H
	CALL	0FFDCH		;PAUSE
	LD	BC,0A040H
	CALL	0FFDCH		;BEEP
	LD	HL,SYCL
	LD	DE,SYNCL
	LD	BC,26
	LDIR
NMII1:	RET
;
;HARDCOPYTREIBER
;
HARD1:	PUSH	HL
	PUSH	AF
	LD	HL,ISOGR
	BIT	3,M
	JR	Z,HCO1
	CP	0DH
	JR	NZ,HCO2
	LD	A,1EH
HCO2:	CALL	0FFE8H		;DRAKK
HCO1:	POP	AF
	POP	HL
	PUSH	AF
	PUSH	BC
	PUSH	DE
	JP	HCRET
;
;
;
	DS	0F1F2H-$
;
SYCL:	DB	0D0H
	DB	07H		;SYNCHRO-LUECKE STANDARD 2000
;
; ehemaliges TASTATURCODE-FELD
;
TCF:	DB	0
	DB	0
	DB	0
R38:	DB	0C3H
	DW	AWHAT
	DW	TAB		;TASTATURTAB.-POINTER
	DW	SFELD		;STRINGTAB.-POINTER
	DW	0		;$ ARBEITSZELLE
	DW	FATAB-FTAB	;LAENGE FU-TASTENTAB.
FUTAB:	DW	FTAB		;FU-TASTENPOS.-TAB.POINTER
	DW	FATAB		;FU-TASTENADR.-TAB.POINTER
BSTDI:	DW	3E0H		;DISTANZ BEI ROLLEN
BSTUA:	DW	0EC00H		;BWS-ANFANG
BSTOG:	DW	0F000H		;OBERE GRENZE BWS,GROESSER
;
;
;
INCH:	NOP
	NOP
	NOP
WHICH:	CALL	INKEY
	OR	A
	JR	Z,WHICH
	NOP
	NOP
	NOP
	RET
;
;
;AUSGABE EINES ZEICHENS AUF DEM BILDSCHIRM
;
OUTCM:	AND	7FH
OUTCH:	JP	HARD1
HCRET:	PUSH	HL
	LD	HL,(CURSR)
	PUSH	AF
	LD	A,(CZSP)
	LD	M,A
	POP	AF
	CP	0DH		;ENTER
	JR	Z,NEWLN
	CP	0CH		;CLS/CA
	JR	Z,CLSCA
	CP	08H
	JR	Z,KURU
	CP	09H
	JR	Z,SCHR
ZEIN:	LD	M,A
SCHR:	INC	HL
PRUL:	EX	DE,HL
	LD	HL,(BSTAB+4)
	XOR	A
	SBC	HL,DE
	EX	DE,HL
	JR	NZ,USPR
ROLL:	LD	DE,(BSTAB+2)
	LD	HL,20H
	ADD	HL,DE
	LD	BC,(BSTAB)
	LD	A,B
	OR	C
	JR	Z,USX
	LDIR
USX:	PUSH	DE
	POP	HL
	PUSH	HL
	INC	DE
	LD	M,20H
	LD	BC,1FH
	LDIR
	LD	HL,(SOIL)
	LD	DE,20H
	XOR	A
	SBC	HL,DE
	LD	(SOIL),HL
	POP	HL
USPR:	LD	A,M
	LD	(CZSP),A
	LD	M,0FFH
	LD	(CURSR),HL
RTOC:	POP	HL
	POP	DE
	POP	BC
	POP	AF
	RET
;
;KURSOR RUECKWAERTS
;
KURU:	DEC	HL
	JR	PRUL
;
;NEWLINE
;
NEWLN:	LD	A,0E0H
	AND	L
	ADD	A,20H
	LD	C,A
WCLL:	LD	M,20H
	INC	HL
	LD	A,L
	CP	C
	JR	NZ,WCLL
	JR	PRUL
;
;CLEAR SCREEN / CURSOR AUF ANFANG
;
CLSCA:	LD	HL,(BSTAB)
	LD	BC,1FH
	ADD	HL,BC
	PUSH	HL
	POP	BC
	LD	HL,(BSTAB+2)
	PUSH	HL
	LD	M,20H
	PUSH	HL
	POP	DE
	INC	DE
	LDIR
	POP	HL
	JR	USPR
;
;
;AUSGABE ZEICHENKETTE BIS BIT 7 GESETZT
;
;
PRST7:	EX	(SP),HL
PS01:	LD	A,M
	INC	HL
	PUSH	AF
	CALL	OUTCM
	POP	AF
	BIT	7,A
	JR	Z,PS01
	EX	(SP),HL
	RET
;
;
;EINGABE EINER ZEILE
;
;
INLIN:	CALL	PRST7
	DB	' #'
	DB	0A0H		;20H + B7
INSTR:	PUSH	HL
	LD	HL,(CURSR)
	LD	(SOIL),HL
CHIN:	RST	20H
	DB	1		;INCH
	RST	20H
	DB	0
	CP	0DH
	JR	NZ,CHIN
	POP	HL
	RET
;
;
;LOOK SPACE
;
;
LOKSP:	LD	A,(DE)
	CP	20H
	RET	NZ
	INC	DE
	JR	LOKSP
;
;
;ISO-ZEICHEN RUECKWANDELN
;
;
IR:	CALL	LOKSP
	XOR	A
	LD	HL,DATA
	LD	M,A
	INC	HL
	LD	M,A
IR2:	LD	A,(DE)
	DEC	HL
	SUB	30H
	RET	M
	CP	0AH
	JR	C,IR3		;0...9
	SUB	07H
	CP	0AH
	RET	M
	CP	10H
	RET	P
IR3:	INC	DE
	RLD
	INC	HL
	RLD
	JR	IR2
;
;
;KONVERTIERUNG ISO IN HEX
;
;
INHEX:	PUSH	BC
	CALL	IR
	LD	B,H
	LD	C,L
	LD	L,M
	INC	BC
	LD	A,(BC)
	LD	H,A
	OR	L
	POP	BC
	RET
;
;
;OUTHX  A --> 2 BYTE HEX
;
;
OUTHX:	PUSH	AF
	RRA
	RRA
	RRA
	RRA
	CALL	OUTA
	POP	AF
OUTA:	PUSH	AF
	AND	0FH
	ADD	A,30H
	CP	3AH
	JR	C,OUTC
	ADD	A,07H
OUTC:	CALL	OUTCH
	POP	AF
	RET
;
;
;OUTHL  --> HEX-AUSGABE VON HL
;
;
OUTHL:	PUSH	AF
	LD	A,H
	CALL	OUTHX
	LD	A,L
	CALL	OUTHX
	POP	AF
	RET
;
;
;MEMORY
;
;
MEM:	LD	HL,(ARG1)
MAUS:	RST	20H
	DB	7		;OUTHL
	PUSH	HL
	RST	20H
	DB	14
	LD	A,M
	RST	20H
	DB	6		;OUTHX
	CALL	INLIN
	LD	DE,(SOIL)
	LD	A,(DE)
	EX	AF,AF'
	POP	HL
	DEC	HL
MAUS1:	INC	HL
	PUSH	HL
	CALL	INHEX
	JR	Z,MAUS4
MAUS2:	LD	A,L
	POP	HL
	LD	M,A
	CP	M
	JR	Z,MAUS1
	RST	20H
	DB	2
	DB	'ER'
	DB	0A0H		;SP + 7   ---> ERROR
MAUS3:	JR	MAUS
MAUS4:	LD	A,(DE)
	CP	20H
	JR	Z,MAUS2
	POP	HL
	INC	HL
	LD	(ARG2),HL
	CP	3BH		;  ";" ALS ABSCHLUSS VOM MEMORY
	RET	Z
	EX	AF,AF'
	CP	20H
	JR	Z,MAUS
	DEC	HL
	CP	'R'
	JR	NZ,MAUS
	DEC	HL
	JR	MAUS
;
;
;SAVE TO CASSETTE
;UP ZUR AUSGABE EINES DATENBEREICHES AUF MB
;AADR = ARG1      EADR = ARG2
;
;
CSAVE:	LD	HL,(ARG1)	;ANFANGSADRESSE
	CALL	BSA
DS1:	EX	DE,HL
	LD	HL,(ARG2)	;ENDEADRESSE
	AND	A
	SBC	HL,DE
	EX	DE,HL
	RET	C
	JP	RUCK1
;
;UP ZUR AUSGABE EINES BLOCKES
;
	DS	0F37DH-$
BSA:	LD	DE,(SYNCL)	;KENNTON 3.5 S
	JR	BSX
BS:	LD	DE,14
BSX:	PUSH	HL
	POP	IX
BSMK:	LD	B,112		;VORBLOCK CA 675 HZ
BSX1:	DJNZ	BSX1
	CALL	FLOUT
	DEC	DE
	LD	A,E
	OR	D
	JR	NZ,BSMK
	LD	C,2		;2X1
BSM0:	LD	B,54		;BSN5...830 HZ
BSX5:	DJNZ	BSX5
	CALL	FLOUT
	DEC	C
	JR	NZ,BSM0
	PUSH	IX		;IX=KOPFINHALT
	POP	DE
	LD	B,18		;BSN0 AUSGABE KENNZEICHEN
BSX0:	DJNZ	BSX0
	CALL	WS
	LD	B,15		;BSN1...
BSW1:	DJNZ	BSW1
	LD	C,16		;DATEN 16X16=32X8
BSM1:	LD	E,M
	INC	HL
	LD	D,M
	ADD	IX,DE
	INC	HL
	PUSH	BC
	CALL	WS
	POP	BC
	DEC	C
	JR	Z,BSM2
	LD	B,14		;BSM2...
BSX2:	DJNZ	BSX2
	JR	BSM1
BSM2:	PUSH	IX		;ENDE DATEN
	POP	DE		;AUSGABE PRUEFSUMME
	LD	B,16		;BSO3...
BSX3:	DJNZ	BSX3
	CALL	WS
	RET
;
;AUSGABE EINES WORTES -16 BIT IN DE
;
WS:	LD	C,16
WSM0:	SRL	D
	RR	E
	JR	NC,WSM1
	LD	B,3		;WSN1...
BSWS1:	DJNZ	BSWS1
	NOP
	JR	WSM3
WSM1:	CALL	FLOUT
WSM3:	LD	B,25		;WSN2...
BSWS2:	DJNZ	BSWS2
WSM2:	CALL	FLOUT
	DEC	C
	RET	Z
	LD	B,21		;WSN3...
BSWS3:	DJNZ	BSWS3
	JR	WSM0
;
;FLANKENAUSGABE BIT 7 PORT B
;
FLOUT:	IN	A,(PIOBD)
	XOR	80H
	OUT	(PIOBD),A
	RET
;
;
;LOAD FROM CASSETTE
;
;
CLOAD:	LD	HL,(ARG1)
DLM0:	CALL	BL
	JR	Z,DLM1
	CALL	PRST7
	DB	'CS'
	DB	0BCH
	CALL	OUTHL
	CALL	OUTSP
DLM1:	EX	DE,HL
	LD	HL,(ARG2)	;ENDE-ADRESSE
	AND	A
	SBC	HL,DE
	EX	DE,HL
	RET	C
	JR	DLM0
;
;UP ZUR EINGABE EINES DATENBLOCKES
;
BL:	CALL	BITIN
	CALL	FIFLA
	LD	C,7
BLM1:	LD	DE,0910H	;BLN9...BLN11
	LD	A,7		;BLN1....
SW1:	DEC	A
	JR	NZ,SW1
	CALL	BITIN
BLMX:	CALL	BITIN
	JR	NZ,BL		;VERAENDERUNG ERKANNT?
	DEC	D		;JA
	JR	NZ,BLMX
	DEC	C
	JR	Z,BLM4		;SYNC.-FELD ERKANNT?
BLM2:	IN	A,(PIOBD)
	XOR	B
	BIT	6,A
	JR	NZ,BLM1		;FLANKE ERKANNT ?
	DEC	E
	JR	NZ,BLM2		;WARTEN
	JR	BL		;TIME OUT
;
;7 NULLEN SIND ERKANNT WORDEN
;
BLM4:	CALL	FIFLA
	LD	A,68
SW3:	DEC	A
	JR	NZ,SW3
	CALL	BITIN
	JR	NZ,BLM4		;AUF 1 WARTEN
	CALL	FIFLA
	LD	A,30		;BLN4....
SW4:	DEC	A
	JR	NZ,SW4
	JP	RUCK2
HILF1:	LD	C,16
	PUSH	DE
	POP	IX		;CRC ANFANGSWERT
	LD	A,26		;BLN10....
SW10:	DEC	A
	JR	NZ,SW10
BLM5:	CALL	WL
	ADD	IX,DE
	PUSH	BC
	LD	C,L
	LD	B,H
	LD	HL,(ARG2)	;ENDADRESSE
	XOR	A
	SBC	HL,BC
	LD	L,C
	LD	H,B
	POP	BC
	JR	C,BLM6
	LD	M,E
	INC	HL
	LD	M,D
	JR	BLM7
BLM6:	LD	A,1		;BLN5...
SW5:	DEC	A
	JR	NZ,SW5
	INC	HL
BLM7:	INC	HL
	DEC	C
	JR	Z,BLM8
	LD	A,18		;BLN6...
SW6:	DEC	A
	JR	NZ,SW6
	JR	BLM5
BLM8:	LD	A,18		;BLN7
SW7:	DEC	A
	JR	NZ,SW7
	CALL	WL		;PRUEFSUMME LESEN
	EX	DE,HL
	PUSH	IX
	POP	BC
	XOR	A
	JP	RUCK3
	RET
;
;UP ZUM LESEN EINES WORTES
;
WL:	PUSH	HL
	LD	L,16
WLM0:	CALL	BITIN
	JR	NZ,WLM1
	XOR	A		;C=0
	JR	WLM2
WLM1:	SCF
WLM2:	RR	D
	RR	E
	CALL	FIFLA
	DEC	L
	JR	Z,WLM3
	LD	A,30		;WLN1...
SWLN1:	DEC	A
	JR	NZ,SWLN1
	JR	WLM0
WLM3:	POP	HL
	RET
;
;UP ZUR EINGABE EINES BIT
;
BITIN:	IN	A,(PIOBD)
	XOR	B
	BIT	6,A
	PUSH	AF
	XOR	B
	LD	B,A
	POP	AF
	RET
;
;FINDEN EINER FLANKE
;
FIFLA:	IN	A,(PIOBD)
	XOR	B
	BIT	6,A
	JR	Z,FIFLA
	RET
;
;DISPLAY MEMEORY
;
DSMEM:	LD	HL,(ARG1)
WAUS:	LD	DE,(ARG2)
	SCF
	PUSH	HL
	SBC	HL,DE
	POP	HL
	RET	NC
	RST	20H
	DB	7		;OUTHL
	LD	BC,0800H
	LD	E,0
ZEILA:	RST	20H
	DB	2
	DB	0A0H
	LD	A,M
	RST	20H
	DB	6		;OUTHX
	ADD	A,C
	LD	C,A
	JR	NC,INCHL
	LD	A,0
	ADC	A,E
	LD	E,A
INCHL:	INC	HL
	DJNZ	ZEILA
	RST	20H
	DB	2
	DB	0A0H
	LD	A,E
	CALL	OUTA
	LD	A,C
	RST	20H
	DB	6		;OUTHX
	JR	WAUS
;
;
;
LARG:	LD	HL,(ARG1)
	LD	DE,(ARG2)
	LD	BC,(ARG3)
	RET
;
;KILL
;
KILL:	CALL	LARG
	LD	M,C
	PUSH	HL
	XOR	A
	EX	DE,HL
	SBC	HL,DE
	LD	B,H
	LD	C,L
	POP	HL
	LD	D,H
	LD	E,L
	INC	DE
	LDIR
	RET
;
;TRANSFER
;
TRANS:	CALL	LARG
	XOR	A
	PUSH	HL
	SBC	HL,DE
	POP	HL
	JR	C,TR1
	LDIR
	RET
TR1:	ADD	HL,BC
	EX	DE,HL
	ADD	HL,BC
	EX	DE,HL
	DEC	HL
	DEC	DE
	LDDR
	RET
;
;REGISTER AUF RSA RETTEN
;
SAVER:	LD	(DATA),SP
	LD	SP,RPC
	PUSH	IX
	PUSH	IY
	PUSH	AF
	PUSH	BC
	PUSH	DE
	PUSH	HL
	EXX
	EX	AF,AF'
	PUSH	AF
	PUSH	BC
	PUSH	DE
	PUSH	HL
	JR	SWL
;
;REGISTER AUS RSA LADEN
;
LOADR:	LD	(DATA),SP
	LD	SP,RHLEX
	POP	HL
	POP	DE
	POP	BC
	POP	AF
	EXX
	EX	AF,AF'
	POP	HL
	POP	DE
	POP	BC
	POP	AF
	POP	IY
	POP	IX
SWL:	LD	SP,(DATA)
	RET
;
;BREAKBEHANDLUNGSPROGRAMM
;
BREAK:	CALL	SAVER
	POP	HL		;KORREKTUR DES EINGEBAUTEN CAL
	LD	(RSP),SP
	LD	SP,STACK
	DEC	HL
	DEC	HL
	DEC	HL
	LD	(RPC),HL
	LD	DE,(ABRK)	;BREAKADRESSE
	LD	HL,OPSEQ
	LD	BC,3
	LDIR
	CALL	REGAN
	JP	ES
;
;BREAKEINGABE
;
BRIN:	LD	HL,(ARG1)
	LD	(ABRK),HL
	LD	DE,OPSEQ
	LD	BC,3
	LDIR
	CALL	REGAN
	RET
;
;EXECUTE
;
EXEC:	LD	HL,(ABRK)
	LD	M,0CDH
	INC	HL
	LD	DE,BREAK
	LD	M,E
	INC	HL
	LD	M,D
;
;JUMP
;
JUMP:	LD	HL,(ARG1)
JUMP1:	LD	(RPC),HL
	LD	SP,(RSP)
	PUSH	HL
	JP	LOADR
;
;GO
;
GO:	LD	HL,(RPC)
	LD	(ARG1),HL
	LD	DE,(ABRK)
	XOR	A
	SBC	HL,DE
	JR	NZ,EXEC
	JR	JUMP
;
;REGISTERAUSGABE
;
OUTDP:	RST	20H
	DB	2
	DB	0BAH		;:+B7
OTHLS:	LD	A,M
	RST	20H
	DB	6		;OUTHX
	DEC	HL
OTHXS:	LD	A,M
	RST	20H
	DB	6
	DEC	HL
OUTSP:	RST	20H
	DB	2		;OUTSP
	DB	0A0H
	RET
;
;AUSGABE 1/0
;
PEINS:	RST	20H
	DB	2
	DB	'1'
	DB	0A0H
	RET
;
PNULL:	JR	NZ,PEINS
	RST	20H
	DB	2
	DB	'0'
	DB	0A0H
	RET
;
;ENTRY	REGISTER
;
REG:	CP	3AH
	JP	NZ,REEIN	;NEIN
REGAN:	RST	20H
	DB	2
	DB	0DH
	DB	'B'
	DB	0D0H		;P+B7
	LD	HL,ABRK+1
	RST	20H
	DB	13		;OUTDP
	RST	20H
	DB	2
	DB	'BS'
	DB	0BAH
	LD	B,3
	LD	HL,OPSEQ
NZX:	LD	A,M
	RST	20H
	DB	6
	INC	HL
	DJNZ	NZX
FLAGS:	RST	20H
	DB	2
	DB	'   S Z C'
	DB	0A0H
	LD	A,(RAFM)
	LD	L,A
AUSFR:	BIT	7,L
	CALL	PNULL
	BIT	6,L
	CALL	PNULL
	BIT	0,L
	CALL	PNULL
	LD	HL,RSP+1
	LD	B,2
TSP:	RST	20H
	DB	2		;PRST7
	DB	'S'
	DB	0D0H		;P+B7
	RST	20H
	DB	13		;OUTDP
TPC:	RST	20H
	DB	2
	DB	'P'
	DB	0C3H		;C+B7
	RST	20H
	DB	13
TIX:	RST	20H
	DB	2
	DB	'I'
	DB	0D8H
	RST	20H
	DB	13
TIY:	RST	20H
	DB	2
	DB	'I'
	DB	0D9H		;Y+B7
	RST	20H
	DB	13
MRESP:	RST	20H
	DB	2
	DB	'A'
	DB	0C6H		;F+B7
	RST	20H
	DB	13
	RST	20H
	DB	2
	DB	'B'
	DB	0C3H		;C+B7
	RST	20H
	DB	13
	RST	20H
	DB	2
	DB	'D'
	DB	0C5H		;E+B7
	RST	20H
	DB	13
	RST	20H
	DB	2
	DB	'H'
	DB	0CCH		;L+B7
	RST	20H
	DB	13
	DJNZ	MRESP
	LD	HL,(CURSR)
	DEC	HL
	LD	M,27H
	RET
;
;REGISTEREINGABE
;
REEIN:	LD	BC,0400H
	LD	HL,(SOIL)
	INC	HL
	INC	HL
	LD	DE,TSP+2
NBF:	LD	A,(DE)
NVGR:	CP	M
	JR	Z,R1GEF
	INC	DE
NSU:	PUSH	HL
	LD	HL,5
	ADD	HL,DE
	EX	DE,HL
	POP	HL
	INC	C
	DJNZ	NBF
	LD	B,4
	LD	A,C
	CP	8
	JR	NZ,NBF
ENDER:	POP	AF
	RST	38H
HLR:	DEC	HL
	JR	NSU
R1GEF:	INC	DE
	INC	HL
	LD	A,(DE)
	AND	7FH
	CP	M
	JR	NZ,HLR
RNGEF:	INC	HL
	LD	A,M
	CP	27H
	LD	A,C
	JR	NZ,ADRE
	ADD	A,4
ADRE:	SLA	A
	LD	C,A
	LD	B,0
	LD	HL,RSP+1	;RSP+1
	SBC	HL,BC
	LD	B,H
	LD	C,L
WAUSG:	RST	20H
	DB	12		;OTHLS
	CALL	INLIN
	LD	DE,(SOIL)
	CALL	INHEX
	JR	NZ,AXX
	LD	A,(DE)
	CP	3BH		;?
	RET	Z
AXX:	EX	DE,HL
	PUSH	BC
	POP	HL
	LD	M,D
	DEC	HL
	LD	M,E
	JP	REGAN
;
;UMSCHALTUNG DER TASTATUR HEXA
;
HEXUM:	RET
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	RET
;
;RUECKSCHALTUNG DER TASTATUR ALFA
;
ALFA:	RET
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	RET
;
;WINDOW
;
WIND:	CALL	PGR
	JR	C,ERROR
WIND1:	LD	(BSTAB),HL
	LD	(BSUAN),BC
	LD	HL,(ARG2)
	LD	(BSOGR),HL
	LD	HL,(CURSR)
	LD	M,20H
CUNEU:	LD	(CURSR),BC
	RET
PGR:	LD	A,(ARG1+1)
	CP	0ECH
	RET	C
	LD	A,(ARG1)
	AND	0E0H
	LD	(ARG1),A
	LD	A,(ARG2)
	AND	0E0H
	LD	(ARG2),A
	LD	HL,(ARG2)
	LD	BC,(ARG1)
	SBC	HL,BC
	RET	C
	JR	Z,CS
	DEC	HL
	LD	A,3
	CP	H
	RET	C
	INC	HL
	LD	DE,40H
	SBC	HL,DE
	RET	C
	LD	DE,20H
	ADD	HL,DE
	RET
CS:	SCF
	RET
ERROR:	POP	AF
	RST	38H
;
;
PIOT:	DB	0FEH		;INT-VEKTOR
	DB	97H		;INT GENERIERUNG
	DB	0DFH		;BIT 5 - A0
;
;NEXT = STEP
;
NEXT:	LD	A,0F7H
	LD	I,A
	DI
	LD	HL,PIOT
	LD	BC,0303H
	OTIR
	LD	HL,(ABRK)
	DEC	HL
	LD	A,M
	LD	(ZSFEI),A
	LD	M,0FBH		;EI-BEFEHL
	LD	(SSP),SP
	LD	SP,(RSP)
	PUSH	HL
	JP	LOADR
;
;RUECKKEHR VOM SCHRITTBETRIEB
;
RVSB:	DI
	CALL	SAVER
	LD	A,07H
	OUT	(PIOBC),A
	LD	HL,(ABRK)
	DEC	HL
	LD	A,(ZSFEI)
	LD	M,A
	POP	HL
	LD	(ABRK),HL
	LD	(RPC),HL
	LD	(RSP),SP
	LD	SP,(SSP)
	LD	DE,OPSEQ
	LD	BC,3
	LDIR
	LD	HL,REGAN
	PUSH	HL
	RETI
;
;VERGLEICH ZWEIER ZEICHENKETTEN
;
COMP:	CALL	LARG
M3D:	LD	A,(DE)
	CP	M
M3E:	JR	NZ,M40
M3F:	DEC	BC
	INC	HL
	INC	DE
	LD	A,B
	OR	C
	RET	Z
	JR	M3D
M40:	RST	20H
	DB	7
	RST	20H
	DB	14
	LD	A,M
	RST	20H
	DB	6
	RST	20H
	DB	14
	EX	DE,HL
	RST	20H
	DB	7
	RST	20H
	DB	14
	EX	DE,HL
	LD	A,(DE)
	RST	20H
	DB	6
	RST	20H
	DB	2
	DB	8DH
	RST	20H
	DB	1
M41:	CP	0DH
	RET	NZ
	JR	M3F
;
;FIND
;
FIND:	LD	DE,(ZILAD)
	DEC	DE
	DEC	DE
	LD	(ARG3),DE
	LD	BC,(ARG1)
M42:	LD	DE,(ARG3)
	RST	20H
	DB	3H
M43:	LD	A,(BC)
	CP	L
	JR	Z,M44
	INC	BC
	LD	A,B
	OR	C
	JR	Z,M46
	JR	M43
M44:	PUSH	BC
	PUSH	DE
	LD	DE,(ARG2)
	DEC	DE
	LD	(LAENG),DE
	INC	BC
MARK1:	LD	A,D
	OR	E
	POP	DE
	JR	Z,M451
M45:	RST	20H
	DB	3H		;INHEX
	LD	A,(BC)
	CP	L
	JR	NZ,M452
	PUSH	DE
	LD	DE,(LAENG)
	DEC	DE
	LD	(LAENG),DE
	INC	BC
	JR	MARK1
M451:	POP	BC		;GEFUNDEN
	LD	(ARG1),BC
	JP	MEM
M452:	POP	BC
	INC	BC
	JR	M42
M46:	RST	20H
	DB	2
	DB	'NOT FOUND'
	DB	8DH
	RET
	DS	0F7FEH-$
APIB:	DW	RVSB
;
;
;
;-----TASTATURABFRAGE FUER K 7669 + Z 1013-------------------- 
; MIT ZUSATZHARDWARE NACH PETERS
; (2/4 MHz, 64/32 ZEICHEN/ZEILE, ZG UMSCHALTUNG) 
;-------------------------------------------------------------
;
;TASTATURPOLLING
; 
TAST:	LD	A,0FH
	OUT	(LATCH),A
	LD	HL,MOFL
	BIT	1,M		;STRINGMODE?
	JP	NZ,AUSG$
	LD	B,0
	BIT	6,M
	JR	Z,MINIT		;OHNE VERZOEG.
VZ:	EX	(SP),IX		;ZEITDEHNUNG 10 ms
	EX	(SP),IX
	DJNZ	VZ
MINIT:	IN	A,(PIOBD)
	CPL
	AND	0FH		;MASKE
	JR	NZ,MSTA1
	RES	0,M		;RUECKSETZEN REPEATKENNZ.
	RES	7,M		;KEINE BETAETIGUNG
	LD	(ZPZ),A
	OUT	(LATCH),A
	RET
MSTA1:	LD	A,(ZPZ)
	OR	A
	JR	Z,MP1
	BIT	0,M		; =1 WENN VORHER REPEAT
	JR	Z,MR0
;
;KLEINE REPEATVERZ.
;
	LD	B,28
MKV1:	LD	C,0
MKV2:	DEC	C
	JR	NZ,MKV2
	DJNZ	MKV1
	JR	MP1
;
;GROSSE REPEATVERZ.+NEGATIV ENTPRELLUNG
; 
MR0:	LD	B,80H
MR1:	LD	C,0
MR2:	IN	A,(PIOBD)
	CPL
	AND	0FH
	JR	Z,MR3
	DEC	C
	JR	NZ,MR2
	DJNZ	MR1
	SET	0,M
	JR	MP1
MR3:	LD	B,ZKNEG		;NEG. ENTPRELLZ. B*5ms
MR4:	LD	C,00H
MR5:	IN	A,(PIOBD)
	CPL
	AND	0FH
	JR	NZ,MR0
	DEC	C
	JR	NZ,MR5
	DJNZ	MR4
;
;SPALTENABTESTUNG
; 
MP1:	BIT	7,M		;ENTPRELLUNG?
	JR	NZ,MP0
	LD	B,ZKPOS		;POS-ENTPRELLZ. B*5ms
ENTPR:	LD	C,80H
ZS1:	IN	A,(PIOBD)
	CPL
	AND	0FH
	RET	Z
	DEC	C
	JR	NZ,ZS1
	DJNZ	ENTPR
MP0:	XOR	A
MP5:	CP	7
	JR	NZ,MP2
	ADD	A,1
MP2:	OUT	(LATCH),A
	LD	D,A
MP3:	IN	A,(PIOBD)
	CPL
	AND	0FH
	JR	NZ,MP4
	LD	A,D
	ADD	A,1H
	CP	12
	JR	NZ,MP5
	RES	0,M
FZUE:	XOR	A
	RET
;
;ERMITTLUNG TASTENPOSITION
; 
MP4:	LD	BC,708H
	OUT	(C),B		;SPALTE 7 AKT.
	SLA	D
	SLA	D
	SLA	D		;MULT.SPALTE MIT 8
	DEC	A
	ADD	A,D
	LD	E,A		;E=TASTENPOSITION 0-95
;
;AUSWERTUNG SHIFT
; 
	LD	(ZPZ),A
	IN	A,(PIOBD)
	AND	0FH
	XOR	8
	LD	A,E
	JR	NZ,FKTZU
	ADD	A,60H
	LD	E,A
;
;FUNKTIONSZUORDNUNG
;
FKTZU:	LD	HL,(FTPOI)	;FUNKT.-TASTENTAB.-POINTER
	LD	BC,(LFTB)	;LAENGE TABELLE
	CPIR			;SUCHEN TAST.POS.
	JR	NZ,MP21
	DEC	HL
	LD	BC,(FTPOI)
	SBC	HL,BC		;HL:=GEF.POS.REL.
	SLA	L		;*2
	LD	BC,(FTAPO)	;F-TASTEN-ADRESS-TB
	ADD	HL,BC
	LD	C,M
	INC	HL
	LD	H,M
	LD	L,C
	LD	BC,MOFL		;MODEFLAGS
	LD	A,(BC)
	RES	0,A		;LOESCHEN LANGE REPEAT
	BIT	7,A
	JP	NZ,FZUE
	SET	7,A
	LD	(BC),A
	JP	(HL)
;
J100:	LD	SP,0B0H
	JP	100H
GRF:	LD	L,4
	JR	AUSF
HC:	LD	L,8
	JR	AUSF
SF:	LD	L,40H
	JR	AUSF
BEEP:	LD	L,20H
	JR	AUSF
SLOCK:	LD	L,10H
AUSF:	LD	A,(BC)
	XOR	L
	LD	(BC),A
	XOR	A
	LD	E,A
	JP	SETFF
MON:	CALL	ZMINI
	RST	38H
B3264:	LD	L,80H
	JR	AUSF1
ZGUM:	LD	L,20H
AUSF1:	IN	A,(HWMOD)
	XOR	L
	JR	AUSF2
F2MHZ:	IN	A,(HWMOD)
	AND	0BFH
	JR	AUSF2
F4MHZ:	IN	A,(HWMOD)
	OR	40H
AUSF2:	OUT	(HWMOD),A
AUSF3:	XOR	A
	LD	(ZPZ),A
	RET
CENTR:	LD	A,43H
	JR	AUSF4
V24:	LD	A,56H
AUSF4:	LD	(37H),A
	LD	(0EFFFH),A
	JR	AUSF3
;
;ZEICHEN AUS TABELLE
;
MP21:	LD	HL,(TAPOI)
	LD	D,0
	ADD	HL,DE		;BERECHN. TABELLENPOS.
	LD	A,M		;HOLEN ZEICHEN TABELLE 
	LD	E,A
;
;CONTROL FUNKTION
;
	IN	A,(PIOBD)
	AND	0FH
	CP	9		;CODE-TASTE GEDR.?
	JR	Z,SF$		;JA
	BIT	3,A		;CTRL-TASTE GEDR.?
	JR	NZ,F$		;NEIN
	LD	A,E
	AND	9FH		;MASKE
	LD	E,A
	IN	A,(PIOBD)
	AND	0FH		;SHIFT+CTRL ?
	JR	NZ,F$		;NEIN
SF$:	LD	A,80H
	ADD	A,E		;SRINGFUNKTION EINLEITEN (>80H)
	LD	E,A
;
;STRING FUNKTION
;
F$:	BIT	7,E
	JR	Z,MNULL
	LD	(ZPZ),A
	LD	HL,(PO$TA)
F$1:	LD	A,M
	OR	A
	JR	Z,MNULL
	INC	HL
	CP	E
	JR	NZ,F$1
	LD	(NEXT$),HL
AUSG$:	LD	HL,(NEXT$)	;NAECHSTES STR.ZEICHEN
	LD	A,M
	INC	HL
	LD	(NEXT$),HL
	LD	HL,MOFL
	SET	1,M
	BIT	7,A
	JR	NZ,AUSGE
	OR	A
	RET	NZ
AUSGE:	RES	1,M
	XOR	A
	RET
;
;GRAFIK-MODE?
;
MNULL:	LD	HL,MOFL
	LD	A,E
	BIT	2,M		;GRAFIKMODE?
	JR	Z,MSM1
	CP	8
	JR	Z,MSM1
	CP	9
	JR	Z,MSM1		;CL+CR KEIN GRFK.Z.
	ADD	A,80H
	LD	E,A
;
;CAPS-TASTATURUMSCHALTUNG
; 
MSM1:	BIT	4,M
	JR	Z,MTE		;KEINE UMSCHAL. BIT 4=0
	LD	A,E
	CP	41H		;C-FLAG GES. FUER A<41H
	JR	C,MTE
;
;KONVERTIERUNG GROSS <-> KLEIN
;
MT5:	CP	5EH		;C-FLAG GESETZT FUER A<5BH
	JR	NC,MT6
	ADD	A,20H
	LD	E,A
	JR	MTE
MT6:	CP	61H		;C-FLAG GES. FUER A<61H (a)
	JR	C,MTE
	CP	7EH		;C-FLAG GES. FUER A<7BH
	JR	NC,MTE
	SUB	20H
	LD	E,A
;
;TASTATURBEEPIMPULS
; 
MTE:	LD	A,E
	LD	(ZPZ),A		;LETZTES ZEICHEN =(0004)
	SET	7,M
	BIT	5,M		;BEEP ON?
	JR	Z,MLED1
	LD	BC,2039H	;ZK
PEEP:	PUSH	BC
MPE3:	PUSH	BC
	LD	A,C		;TONH.=0->PAUSE
	OR	A
	LD	A,0FH
	JR	Z,MPE4
	LD	A,0EH
MPE4:	OUT	(LATCH),A
	POP	BC		;C=f, B=t
	PUSH	BC
MPE1:	DEC	C		;NEGATIVE HALBWELLE
	JR	NZ,MPE1
	LD	A,0FH
	OUT	(LATCH),A
	POP	BC
	PUSH	BC
MPE2:	DEC	C		;POSITIVE HALBWELLE
	JR	NZ,MPE2
	POP	BC
	DJNZ	MPE3
	POP	BC
;
;NEUSETZEN FLIP-FLOP's
;
SETFF:	PUSH	HL
	LD	HL,MOFL
	LD	A,0EH		;LED-FLIP-FLOP
	OUT	(LATCH),A	;NEU SETZEN 
	BIT	3,M
	JR	Z,MGR
	LD	A,0CH
	OUT	(LATCH),A
MGR:	BIT	4,M
	POP	HL
	JR	Z,MLED1
	LD	A,0DH
	OUT	(LATCH),A
MLED1:	LD	A,7H
	OUT	(LATCH),A
	LD	A,E
	OR	A
	RET
;
;FUNKTIONSTASTEN-POS.TABELLE
;
FTAB:	DB	43H		;GRAFIK ON/OFF
	DB	31H		;SHIFT-LOCK
	DB	2AH+60H		;SLOW/FAST
	DB	43H+60H		;BEEP ON/OFF
	DB	44H+60H		;MON-RET/RST 38H
	DB	33H+60H		;32/64
	DB	2CH+60H 	;ZG-UMSCH.
	DB	29H+60H		;2 MHZ
	DB	2BH+60H		;HARDCOPY ON/OFF
	DB	2DH+60H		;4 MHZ
	DB	32H+60H		;JMP 100
	DB	31H+60H		;SCREEN COPY
;
;FUNKTIONSTASTEN-ADRESSTABELLE
;
FATAB:	DW	GRF
	DW	SLOCK
	DW	SF
	DW	BEEP
	DW	MON
	DW	B3264
	DW	ZGUM
	DW	F2MHZ
	DW	HC
	DW	F4MHZ
	DW	J100
	DW	BSDR
;
;TASTENBELEGUNGSTABELLE
;ERSTE SHIFTEBENE
;
;             ZEICHEN  TASTE  POSITIONSCODE (INTERN HEX)
TAB:	DB	'1'	;1	0
	DB	'Q'	;2	1
	DB	'A'	;3	2
	DB	'Y'	;5	3
	DB	'2'	;4	4
	DB	'W'	;6	5
	DB	'S'	;7	6
	DB	'X'	;9	7
	DB	'3'	;8	8
	DB	'E'	;10	9
	DB	'D'	;11	A
	DB	'C'	;13	B
	DB	'4'	;12	C
	DB	'R'	;14	D
	DB	'F'	;15	E
	DB	'V'	;17	F
	DB	'5'	;16	10
	DB	'T'	;18	11
	DB	'G'	;19	12
	DB	'B'	;21	13
	DB	'6'	;20	14
	DB	'Z'	;22	15
	DB	'H'	;23	16
	DB	'N'	;25	17
	DB	'7'	;24	18
	DB	'U'	;26	19
	DB	'J'	;27	1A
	DB	'M'	;29	1B
	DB	'8'	;28	1C
	DB	'I'	;30	1D
	DB	'K'	;31	1E
	DB	','	;33	1F
	DB	'9'	;32	20
	DB	'O'	;34	21
	DB	'L'	;35	22
	DB	'.'	;37	23
	DB	'0'	;36	24
	DB	'P'	;38	25
	DB	':'	;39	26
	DB	';'	;41	27
	DB	'-'	;40	28
	DB	08H	;42	29    CURSOR LINKS  (BS)
	DB	0AH	;43	2A    CURSOR RUNTER (LF)
	DB	7FH	;55	2B    DEL
	DB	0BH	;44	2C    CURSOR HOCH
	DB	09H	;45	2D    CURSOR RECHTS (TAB)
	DB	'@'	;46	2E
	DB	'\'	;48	2F
	DB	'~'	;51	30
	DB	0	;54	31    CAPS-LOCK
	DB	1BH	;62	32    ESCAPE
	DB	14H	;64	33    TAB-DUMMY
	DB	'['	;50	34
	DB	']'	;53	35
	DB	0DH	;61	36    ENTER
	DB	' '	;63	37    SPACE
	DB	0	;49.1	38
	DB	0	;49.2	39
	DB	0	;56	3A
	DB	0	;	3B
	DB	0	;	3C
	DB	0	;57	3D    CODE-TASTE
	DB	0	;47/60	3E    SHIFT
	DB	0	;58	3F    CTRL-TASTE
	DB	0	;	40
	DB	0	;	41
	DB	0	;	42
	DB	0	;59	43    GRAFIK ON/OFF
	DB	03H	;52	44    ^C
	DB	0	;	45
	DB	0	;	46
	DB	0	;	47
	DB	0	;	48
	DB	0	;	49
	DB	0	;	4A
	DB	0	;	4B
	DB	0	;	4C
	DB	0	;	4D
	DB	0	;	4E
	DB	0	;	4F
	DB	0	;	50
	DB	0	;	51
	DB	0	;	52
	DB	0	;	53
	DB	0	;	54
	DB	0	;	55
	DB	0	;	56
	DB	0	;	57
	DB	0	;	58
	DB	0	;	59
	DB	0	;	5A
	DB	0	;	5B
	DB	0	;	5C
	DB	0	;	5D
	DB	0	;	5E
	DB	0	;	5F
;
;ZWEITE SHIFT-EBENE
;
;             ZEICHEN  TASTE  POSITIONSCODE (INTERN HEX)
	DB	'!'	;1	0 + OFFSET 60H FUER ALLE
	DB	'q'	;2	1
	DB	'a'	;3	2
	DB	'y'	;5	3
	DB	'"'	;4	4
	DB	'w'	;6	5
	DB	's'	;7	6
	DB	'x'	;9	7
	DB	'@'	;8	8
	DB	'e'	;10	9
	DB	'd'	;11	A
	DB	'c'	;13	B
	DB	'$'	;12	C
	DB	'r'	;14	D
	DB	'f'	;15	E
	DB	'v'	;17	F
	DB	'%'	;16	10
	DB	't'	;18	11
	DB	'g'	;19	12
	DB	'b'	;21	13
	DB	'&'	;20	14
	DB	'z'	;22	15
	DB	'h'	;23	16
	DB	'n'	;25	17
	DB	'/'	;24	18
	DB	'u'	;26	19
	DB	'j'	;27	1A
	DB	'm'	;29	1B
	DB	'('	;28	1C
	DB	'i'	;30	1D
	DB	'k'	;31	1E
	DB	'<'	;33	1F
	DB	')'	;32	20
	DB	'o'	;34	21
	DB	'l'	;35	22
	DB	'>'	;37	23
	DB	'='	;36	24
	DB	'p'	;38	25
	DB	'*'	;39	26
	DB	'?'	;41	27
	DB	'+'	;40	28
	DB	0	;42	29    2 MHz
	DB	0	;43	2A    SLOW/FAST
	DB	0	;55	2B    HARDCOPY ON/OFF
	DB	0	;44	2C    ZG DIN/ASCII
	DB	0	;45	2D    4 MHz
	DB	'#'	;46	2E
	DB	'|'	;48	2F
	DB	"'"	;51	30
	DB	0	;54	31    SCREEN COPY
	DB	0	;62	32    JP 100
	DB	0	;64	33    32/64 ZEICHEN/ZEILE
	DB	'{'	;50	34
	DB	'}'	;53	35
	DB	'^'	;61	36    SHIFT ENTER = ^
	DB	'_'	;63	37    SHIFT SPACE = _
	DB	0	;49.1	38
	DB	0	;49.2	39
	DB	0	;56	3A
	DB	0	;	3B
	DB	0	;	3C
	DB	0	;57	3D    CODE-TASTE
	DB	0	;47/60	3E    SHIFT
	DB	0	;58	3F    CTRL-TASTE
	DB	0	;	40
	DB	0	;	41
	DB	0	;	42
	DB	0	;59	43    BEEP ON/OFF
	DB	0	;52	44    MON = RST 38H
	DB	0	;	45
	DB	0	;	46
	DB	0	;	47
	DB	0	;	48
	DB	0	;	49
	DB	0	;	4A
	DB	0	;	4B
	DB	0	;	4C
	DB	0	;	4D
	DB	0	;	4E
	DB	0	;	4F
	DB	0	;	50
	DB	0	;	51
	DB	0	;	52
	DB	0	;	53
	DB	0	;	54
	DB	0	;	55
	DB	0	;	56
	DB	0	;	57
	DB	0	;	58
	DB	0	;	59
	DB	0	;	5A
	DB	0	;	5B
	DB	0	;	5C
	DB	0	;	5D
	DB	0	;	5E
	DB	0	;	5F
;
;UP-STATUSABFRAGE
; 
STAT:	LD	A,0FH
	OUT	(LATCH),A
	XOR	A
	LD	(ZPZ),A
	IN	A,(PIOBD)
	AND	0FH
	SUB	0FH
	RET	Z
	LD	A,0FFH
	RET
;
;
;-------SAVE-LOAD-ROUTINE MIT KOPF, BLOCKNUMMERN-----------
; UND VERIFY-FUNKTION  5.7 RB 
;
;
TYPP	EQU	PUANF-4H	; TYPKENNZEICHENZELLE PUFFER
ARG1P	EQU	PUANF-10H	; ARG1 PUFFER
ARG2P	EQU	PUANF-0EH	; ARG2 PUFFER
ARG3P	EQU	PUANF-0CH	; STARTADRESSE IM PUFFER
PUANF	EQU	0F0H		; PUFFERANFANG NAME
MONTB	EQU	0B0H		; ANF.Z-MON-TAB RAM
KZALT	EQU	0BH		; KZ OHNE KOPFADR.
;
;SAVE MIT NAME
;
SAVE:	DB	0FDH
	LD	H,0		;LOESCHEN TYP-KZ
SARU1:	CP	3AH		;WIEDERHOLEN MIT GLEICHEN
	CALL	NZ,KAUFB	;PARAMETERN BEI A=':'
	RST	20H
	DB	2,8DH
	CALL	L1
	LDIR
	LD	HL,PUANF-10H
	CALL	BSA$		;KOPFAUSGABE
	LD	HL,(ARG1P)
	CALL	PRTHL		;AUSGABE MEMORYPOINTER
	CALL	BSA$		;SCHREIBEN ANFANGSBLOCK
	CALL	DS1		;SPEICHERAUSG.BIS ARG2
	CALL	VERIF
	RET
;
BSA$:	LD	DE,1000H	;L[NGE VORTON
	JP	BSX
;
;UP - KOPFAUFBEREITUNG IM PUFFER
;
KAUFB:	CALL	L1
	EX	DE,HL
	LDIR			;F]LLEN PUFFER ARG1 U. 2
	LD	HL,(ARG3)
	LD	(ARG3P),HL	;ARG3
	LD	HL,PUANF-3H
	LD	A,0D3H		;KOPFKENNZEICHEN -> PUFFER
	LD	B,3
KOKZ:	LD	M,A
	INC	HL
	DJNZ	KOKZ		;3*D3H=KZ-NAMEN
	CALL	L3		;EING.TYP U.NAME
	DB	0FDH
	LD	A,H
	LD	(TYPP),A
	LD	HL,(SOIL)
	LD	BC,10H
	LD	DE,PUANF
	LDIR			;LADEN PUFFER MIT NAME
	RST	20H
	DB	2,8DH
	RET
;
;
;HILFSPROGRAMME ZUR NUTZUNG DER ALTEN ROUTINEN
;
RUCK1:	LD	(ZILAD),HL
	CALL	BS
	CALL	PRTHL
	JP	DS1
RUCK2:	CALL	WL
	LD	(DATA),DE
	JP	HILF1
RUCK3:	SBC	HL,BC
	EX	DE,HL
	LD	DE,(DATA)
	RET
;
;UP - VERIFY 
;
VERIF:	RST	20H
	DB	2,'verify? (Y)',0BAH
	RST	20H
	DB	1H
	CP	59H		;'Y'
	RET	NZ
	RST	20H
	DB	2H,' rewind ',0BCH
	RST	20H
	DB	1H
	RST	20H
	DB	2H,0DH,8DH
SUCH1:	CALL	TAST
	CP	3
	JP	Z,38H
	CALL	BLBS
	JR	NZ,SUCH1
	LD	A,PUANF-10H
	CP	E
	JR	NZ,SUCH1
	XOR	A
	CP	D
	JR	NZ,SUCH1
VERGL:	CALL	BLBS
	CALL	NZ,BADRC
	PUSH	AF
	LD	BC,39H
	CALL	NZ,PEEP
	POP	AF
	RET	NZ
	LD	H,D
	LD	L,E
	CALL	PRTHL
	LD	A,(ZILAD)
	CP	E
	JR	NZ,VERGL
	LD	A,(ZILAD+1)
	CP	D
	JR	NZ,VERGL
	CALL	CURIN
	RET
;
;SCHREIBEN BLOCK AUF BS
;
BLBS:	LD	A,0FFH
	LD	(ARG2+1),A
	LD	HL,0EC00H
	CALL	BL
	RET
;
;
;	LOAD MIT NAME
; 
LOAD:	LD	HL,(SOIL)
	INC	HL
	INC	HL
	INC	HL		;POINTER 3.ZEICHEN
	LD	A,M
	DB	0FDH
	LD	L,A		;LD L(IY),A (KZ-SPERRE)
	DEC	HL
	DB	0FDH
	LD	H,0		;LD H(IY),A (KEIN TYP)
	LD	A,M		;A=2.BUCHST.
LORU1:	LD	HL,DATA+2
	LD	M,0		;L\SCHEN ZEICHENZ[HLER
	LD	HL,KZALT
	LD	M,0		;KZ VOREINSTELLEN
	CP	4EH		;EINSPRUNG ANWENDERPROGR.
	PUSH	HL
	CALL	Z,L3		;LADEN NAME+TYP
	POP	HL
	LD	HL,(ARG1)
	LD	(ARG3),HL	;RETTEN NEUE ADR.
	EX	AF,AF'
;
;SUCHEN NACH KOPFBLOCK
;
LOAD3:	RST	20H
	DB	4H		;ABRUCH DURCH BREAK
	CP	3H
	JR	NZ,KBRAK
	RST	20H
	DB	2,8DH
	RET
KBRAK:	LD	A,PUANF+15
	LD	(ARG2),A
	LD	HL,PUANF-10H
	CALL	BL		;LADEN KOPFBLOCK
	EX	AF,AF'
	CP	41H
	JR	Z,ALT
	EX	AF,AF'
	JR	NZ,LOAD3
	LD	D,A
	OR	E
	LD	(KZALT),A
	LD	B,3H
	LD	HL,PUANF-3
KOKO:	LD	A,M
	CP	0D3H		;KONTROLLE KOPFBLOCK
	INC	HL
	JR	NZ,LOAD3
	DJNZ	KOKO
;
ALT:	RST	20H
	DB	2,8DH
	LD	B,3H
	LD	HL,(ARG1P)
	LD	(ZILAD),HL
	LD	HL,ARG1P+1
DRARG:	RST	20H		;DRUCKEN DER 3 ARGUMENTE
	DB	0CH		;OTHLS
	INC	HL
	INC	HL
	INC	HL
	INC	HL
	DJNZ	DRARG
	RST	20H
	DB	2,0DH,8DH
	LD	HL,PUANF-4
	LD	DE,(CURSR)
	LD	BC,14H
	LDIR			;DRUCKEN DES NAMENSBLOCKS
	INC	DE		;SPACE NACH NAME
	LD	(CURSR),DE
LSTOP:	DB	0FDH
	LD	A,H		;LD A,H(IY)
	CP	21H		;TEST AUF TYPKONTROLLE
	JR	C,LOAD5		;KEINE TYPKONTROLLE 
	LD	HL,TYPP
	CP	M
	CALL	NZ,FEHL1
	JR	NZ,LOAD3	;TYP NICHT OK
LOAD5:	LD	A,(DATA+2)
	LD	B,A
	OR	A		;TEST AUF NAMENSSIGNIF.
	JR	Z,LOAD6
	LD	HL,PUANF
	LD	DE,(SOIL)
LOAD7:	LD	A,(DE)
	CP	M		;NAMENSKONTROLLE
	INC	HL
	INC	DE
	CALL	NZ,FEHL1
	JP	NZ,LOAD3
	DJNZ	LOAD7
LOAD6:	LD	HL,(ARG3)
	XOR	A
	OR	H		;TEST AUF >0FFH
	JR	Z,CL1		;BEI <100H KEINE NEUE AADR.
	LD	BC,(ARG1P)
	LD	(ARG1P),HL
	RST	20H
	DB	7H		;OUTHL
	RST	20H
	DB	0EH		;OUTSP
	SBC	HL,BC
	LD	BC,(ARG2P)
	ADD	HL,BC
	LD	(ARG2P),HL
	RST	20H
	DB	7H		;OUTHL
;
;EINLESEN FILE
;  
CL1:	RST	20H
	DB	2,0DH,8DH
	CALL	L1
	LDIR			;]BERNEHMEN DER PARAMETER
	LD	HL,(ARG1P)
DLMO:	LD	A,(MOFL)
	LD	(ARG3),A
	RES	6,A		;SLOW-BIT
	LD	(MOFL),A
	CALL	0F130H		;INKEY
	EX	AF,AF'
	LD	A,(ARG3)
	LD	(MOFL),A
	EX	AF,AF'
	CP	3
	RET	Z
	CALL	PRTHL
	LD	A,(KZALT)
	OR	A
	PUSH	AF
	CALL	Z,BLALT
	POP	AF
	CALL	NZ,BLMK
	EX	DE,HL
	LD	HL,(ARG2P)
	AND	A
	SBC	HL,DE
	EX	DE,HL
	JR	NC,DLMO
	LD	HL,(ARG2P)
	CALL	PRTHL
	CALL	CURIN
;
;AUTOSTART?
;
	LD	HL,(ARG3P)
	LD	(ARG3),HL
	LD	A,(TYPP)
	CP	43H		;KONTROLLE C-FILE
	RET	NZ
	DB	0FDH
	LD	A,L
	CP	20H		;KONTROLLE SPERRE
	RET	NZ
	JP	(HL)		;AUTOSTART
;
;UP - LESEN EINES BLOCKS MIT KONTROLLE
; INPUT: (ZILAD) - ZU LESENDER BLOCK
;  HL    - DMA
; OUTPUT: (ZILAD)- NAECHSTER ZU LESENDE BLOCK
;
BLMK:	CALL	BL
	JR	Z,DLM3
;
; BLOCKSUCHEN
;
BADR:	CALL	BADRC
	LD	BC,39H
	CALL	PEEP
INCHR:	RST	20H
	DB	1
	CP	03H
	JR	Z,BLMR
	RST	20H
	DB	2,0DH,8DH
SUCHB:	LD	BC,20H
	AND	A
	SBC	HL,BC
WIED:	CALL	BL
	JR	NZ,SUCHB
	LD	A,D
	AND	E
	INC	A
	JR	Z,BLMR
DLM3:	PUSH	HL
	EX	DE,HL
	AND	A
	LD	DE,(ZILAD)
	SBC	HL,DE
	POP	HL
	JR	Z,DLM1$
	JR	C,SUCHB
	CALL	RECER
	CALL	FEHL1
	LD	BC,40H
	CALL	PEEP
	JR	INCHR
DLM1$:	PUSH	HL
	LD	HL,20H
	ADD	HL,DE
	LD	(ZILAD),HL
BLMR:	POP	HL
	RET
;
; UP - LESEN ALTE BLOECKE
;
BLALT:	CALL	BL
	RET	Z
	DB	0FDH
	LD	L,A		;SPERRE SETZEN
	CALL	BADRC
	RET
; 
;ARGUMENTE LADEN
;
L1:	LD	HL,ARG1P
	LD	DE,ARG1
	LD	BC,4H
	RET
;
; TYP + NAME LADEN
;
L3:	DB	0FDH
	LD	A,H		;TYPVORGABE?
	OR	A
	JR	NZ,KTYP
	RST	20H
	DB	2H,0DH,'typ',0BAH
	RST	20H
	DB	1H		;INCHAR
	CP	20H		;<20H=KZ KEINE TYPENKONTR.
	JR	NC,L31
	LD	A,20H
L31:	RST	20H
	DB	0		;OUTCHAR
	DB	0FDH
	LD	H,A		;SPACE=KZ FUER OHNE TYP
KTYP:	RST	20H
	DB	2H,' filename',0BAH
	LD	HL,(CURSR)
	LD	(SOIL),HL
	LD	C,0FFH
ZKINP:	INC	C
	RST	20H
	DB	1
	CP	3
	JP	Z,LRET
	CP	8
	JR	NZ,OUTC$
	DEC	C
	JP	M,ZKINP
ENDE:	DEC	C
OUTC$:	RST	20H
	DB	0
	CP	0DH
	LD	A,C
	LD	(DATA+2),A
	RET	Z
	LD	A,10H		;16 ZEICHEN
	CP	C
	LD	A,8
	JR	NZ,ZKINP
	JR	ENDE
;
;FEHLERMELDUNGEN
;
BADRC:	CALL	CURIN
	RST	20H
	DB	2,'bad',0A0H
RECER:	RST	20H
	DB	2,'record',0A0H
	RET
FEHL1:	RST	20H
	DB	2,'not found',8DH
	RET
;
; AUSGABE HL AUF GLEICHER POSITION
;
PRTHL:	PUSH	DE
	PUSH	HL
	LD	DE,(CURSR)
	RST	20H
	DB	7		;OUTHL
	LD	HL,(CURSR)
	LD	M,20H
	LD	(CURSR),DE
LRET:	POP	HL
	POP	DE
	RET
;
;CURSOR-ADRESSE + 5
;
CURIN:	PUSH	HL
	PUSH	BC
	LD	HL,(CURSR)
	LD	BC,5
	ADD	HL,BC
	LD	(CURSR),HL
	POP	BC
	POP	HL
	RET
;
;------- UP ZUR EINGABE EINES DATENBLOCKS----------------
; INPUT:HL=AADR.
;OUTPUT:HL=AADR.NAECHSTER BLOCK
;       DE=(DATA)=KOPFADRESSE
;       Z=1 --> BLOCK FEHLERFREI
;
;SUCHEN EINES KOPFBLOCKS
;INHALT STEHT IM PUFFER (E0H)
;
SUCHK:	PUSH	HL
	PUSH	DE
	PUSH	BC
SKBL1:	RST	20H
	DB	4
	CP	3
	JR	Z,SKBLE
	LD	A,PUANF+15
	LD	(ARG2),A
	LD	HL,PUANF-10H
	CALL	BL
	LD	B,3
	LD	HL,PUANF-3
SKBL2:	LD	A,M
	CP	0D3H
	INC	HL
	JR	NZ,SKBL1
	DJNZ	SKBL2
SKBLE:	POP	BC
	POP	DE
	POP	HL
	RET
;
;AUFBEREITUNG KOPFPUFFER
;
AKP:	PUSH	HL
	PUSH	DE
	PUSH	BC
	CALL	KAUFB
	POP	BC
	POP	DE
	POP	HL
	RET
	RET
;
DRDEL:	PUSH	HL
	LD	HL,AZZ
	LD	M,0
	INC	HL
	LD	M,0
	INC	HL
	LD	M,0
	POP	HL
	RET
;
;
; BILDSCHIRMDRUCK
;
BSDR:	PUSH	DE
	PUSH	HL
	PUSH	BC
	LD	HL,0EC00H	;BS-ANFANG
	LD	DE,0		;ZEILE+ZPOS=0
	LD	A,1EH
	CALL	DRAKK		;CR VOR BEGINN
	LD	BC,2020H	;32*32
	IN	A,(HWMOD)		;BILDSCHIRMFOMAT TESTEN
	AND	80H
	JR	Z,ZCH
	LD	BC,1040H	;64*16
ZCH:	LD	A,M
	CP	0FFH		;CURSOR=ENDE
	JR	Z,MA
	CP	80H
	JR	C,ZCH1
ZCH0:	LD	A,20H
ZCH1:	CP	20H
	JR	C,ZCH0
	CALL	DRAKK
	INC	HL
	INC	E
	LD	A,E
	CP	C
	JR	NZ,ZCH
	LD	E,0
	LD	A,1EH
	CALL	DRAKK
	INC	D
	LD	A,D
	CP	B
	JR	NZ,ZCH
MA:	POP	BC
	POP	HL
	POP	DE
	XOR	A
	RET
;
;
;AUSGABE EINER PERIODE AUF JOYBOX UND TB
;INP: C - PERIODENDAUER n*33mks+20mks
;
;
SOUND:	PUSH	BC
	LD	A,80H		;POS HALBWELLE
	OUT	(PIOAD),A	;JOYBOX
	OUT	(PIOBD),A	;TB-BUCHSE
	LD	B,C
SOUN1:	BIT	0,(IX+0)	;ZEITDEHNUNG
	DJNZ	SOUN1
	XOR	A		;NEG.HALBWELLE
	LD	B,C
	OUT	(PIOAD),A
	OUT	(PIOBD),A
SOUN2:	BIT	0,(IX+0)
	DJNZ	SOUN2
	POP	BC
	RET
;
;ABFRAGE JOYSTICK
;RET: B - LINKS
;     C - RECHTS
;     Z - KEINE BETAETIGUNG
;     CY- NICHT ANGESCHL.
;
GETST:	LD	A,0CFH		;BIT-BETR.
	LD	C,1FH
	OUT	(PIOAC),A	;STW PIOA
	LD	A,C		;5+6+7 AUSG.
	OUT	(PIOAC),A
	LD	A,20H		;LINKS
	OUT	(PIOAD),A	;DAT PIOA
	IN	A,(PIOAD)
	AND	C
	SCF
	RET	Z
	CPL
	AND	C
	LD	B,A
	LD	A,40H		;RECHTS
	OUT	(PIOAD),A
	IN	A,(PIOAD)
	CPL
	AND	C
	LD	C,A
	OR	B
	RET
;
; ZUS.-MON.-INITIALISIERUNG
; 
ZMINI:	LD	HL,INITB	;ADR.BELEGUNGSTABELL
	LD	DE,MONTB	; ADR. ZUS.-MON-TAB -> B0H
	LD	BC,LINIT	; LAENGE TABELLE
	LDIR
	RET
;
INITB:	DB	'L'
	DW	LOAD
	DB	'S'
	DW	SAVE
	DB	'D'
	DW	DRDEL
	DB	'I'
	DW	DRINS
LINIT	EQU	$-INITB
;
;STANDARDSTRINGS
;
SFELD:	DB	'1'+80H
	DB	'@LLL',0DH
	DB	'2'+80H
	DB	'@S:',0DH
	DB	'3'+80H
	DB	'@LNN',0DH,'@@',0DH
	DB	'4'+80H
	DB	'RUN',0DH
	DB	'5'+80H
	DB	'EDIT'
	DB	'6'+80H
	DB	'LIST',0DH
	DB	'7'+80H
	DB	'HLOAD',0DH
	DB	'8'+80H
	DB	'HSAVE',0DH
	DB	90H
	DB	'PRINT'
	DB	8CH
	DB	'CLOAD"'
	DB	86H
	DB	'CSAVE"'
	DB	97H
	DB	"WINDOW",0DH
	DB	8DH
	DB	'PRINTAT('
	DB	87H
	DB	'GOTO'
	DB	88H
	DB	'FOR'
	DB	8BH
	DB	'NEXT'
	DB	82H
	DB	'GOSUB'
	DB	95H
	DB	'RETURN'
	DB	89H
	DB	'INPUT'
	DB	99H
	DB	'INKEY$'
	DB	9CH
	DB	'POKE'
	DB	81H
	DB	0DH,'(c) by Rainer Brosig  BPC 12/89'
	DB	0DH
END$F:	DB	0		;ENDE $FELD
	DS	0-74-END$F
;
DRINI	EQU	0E800H
DRZEL	EQU	DRINI+3
DRAKK	EQU	DRZEL+3	
ZEIDR	EQU	DRAKK+3
;
DUMMY:	RET
;
;
SVTLA:	JP	SOUND
	JP	GETST
	JP	AKP
	JP	SUCHK
	JP	BSMK
	JP	BLMK
	JP	DRAKK
DRINS:	JP	DRINI
	JP	DUMMY
	JP	DUMMY
	JP	DUMMY
	JP	DUMMY
	JP	PEEP
	JP	DRZEL
	JP	HARD1
	JP	BSDR
DRAKV:	JP	DRAKK
DDELS:	JP	DRDEL
	JP	ZMINI
	JP	LORU1
	JP	SARU1
	JP	STAT
	JP	POLL		;INKEY BLIND
	JP	TAST		;INKEY NORMAL
.DEPHASE
	END
